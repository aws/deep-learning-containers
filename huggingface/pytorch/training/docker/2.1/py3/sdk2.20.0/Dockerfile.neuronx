# https://github.com/aws/deep-learning-containers/blob/master/available_images.md
# refer to the above page to pull latest PyTorch Neuronx image

# docker image region us-west-2
FROM 763104351884.dkr.ecr.us-west-2.amazonaws.com/pytorch-training-neuronx:2.1.2-neuronx-py310-sdk2.20.0-ubuntu20.04

LABEL maintainer="Amazon AI"
LABEL dlc_major_version="2"

# version args
ARG OPTIMUM_NEURON_VERSION=0.0.28
ARG TRANSFORMERS_VERSION
ARG DATASETS_VERSION
ARG GEVENT_VERSION=24.10.3
ARG PYTHON=python3

RUN apt-get purge -y --auto-remove emacs && apt-get clean && rm -rf /usr/share/emacs /etc/emacs /var/lib/emacs

RUN pip install --upgrade pip

RUN pip install --no-cache-dir --no-build-isolation kenlm

 # install Hugging Face libraries and its dependencies
RUN pip install --no-cache-dir \
	"sagemaker==2.232.2" \
	evaluate \
	transformers[sklearn,sentencepiece,audio,vision]==${TRANSFORMERS_VERSION} \
	datasets==${DATASETS_VERSION} \
	optimum-neuron==${OPTIMUM_NEURON_VERSION} \
    peft \
	gevent==${GEVENT_VERSION}

# Pin numpy to version required by neuronx-cc
# Update Pillow and urllib version to fix high and critical vulnerabilities
RUN pip install -U \
	"tensorboard>=2.11.0" \
	"numpy>=1.24.3,<=1.25.2" \
	"numba==0.58.1" \
	"Pillow==10.3.0" \
	"requests<2.32.0" \
	"accelerate==0.32.0"
	Jinja2 \
	mlflow \
	tornado \
	"awscli<2" \
	boto3 \
	botocore \
	google-auth \
	"urllib3>=1.26.17,<1.27"

RUN apt-get update \
 && apt install -y --no-install-recommends \
    git-lfs \
	libgssapi-krb5-2 \
	libexpat1 \
	expat \
	libarchive13 \
	libgstreamer1.0-0 \
	libgstreamer-plugins-base1.0-0 \
 && apt-get upgrade -y apparmor \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

RUN apt-get autoremove -y

RUN HOME_DIR=/root \
 && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
 && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
 && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
 && chmod +x /usr/local/bin/testOSSCompliance \
 && chmod +x ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh \
 && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \
 && rm -rf ${HOME_DIR}/oss_compliance*
