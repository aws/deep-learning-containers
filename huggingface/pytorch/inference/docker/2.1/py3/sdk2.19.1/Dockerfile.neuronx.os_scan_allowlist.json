{
    "linux": [
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: scsi: qla2xxx: Fix double free of fcport The server was crashing after LOGO because fcport was getting freed twice. -----------[ cut here ]----------- kernel BUG at mm/slub.c:371! invalid opcode: 0000 1 SMP PTI CPU: 35 PID: 4610 Comm: bash Kdump: loaded Tainted: G OE --------- - - 4.18.0-425.3.1.el8.x86_64 #1 Hardware name: HPE ProLiant DL360 Gen10/ProLiant DL360 Gen10, BIOS U32 09/03/2021 RIP: 0010:set_freepointer.part.57+0x0/0x10 RSP: 0018:ffffb07107027d90 EFLAGS: 00010246 RAX: ffff9cb7e3150000 RBX: ffff9cb7e332b9c0 RCX: ffff9cb7e3150400 RDX: 0000000000001f37 RSI: 0000000000000000 RDI: ffff9cb7c0005500 RBP: fffff693448c5400 R08: 0000000080000000 R09: 0000000000000009 R10: 0000000000000000 R11: 0000000000132af0 R12: ffff9cb7c0005500 R13: ffff9cb7e3150000 R14: ffffffffc06990e0 R15: ffff9cb7ea85ea58 FS: 00007ff6b79c2740(0000) GS:ffff9cb8f7ec0000(0000) knlGS:0000000000000000 CS: 0010 DS: 0000 ES: 0000 CR0: 0000000080050033 CR2: 000055b426b7d700",
            "vulnerability_id": "CVE-2024-26929",
            "name": "CVE-2024-26929",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "192.212"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-26929.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2024-26929 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: gfs2: Fix slab-use-after-free in gfs2_qd_dealloc In gfs2_put_super(), whether withdrawn or not, the quota should be cleaned up by gfs2_quota_cleanup(). Otherwise, struct gfs2_sbd will be freed before gfs2_qd_dealloc (rcu callback) has run for all gfs2_quota_data objects, resulting in use-after-free. Also, gfs2_destroy_threads() and gfs2_quota_cleanup() is already called by gfs2_make_fs_ro(), so in gfs2_put_super(), after calling gfs2_make_fs_ro(), there is no need to call them again.",
            "vulnerability_id": "CVE-2023-52760",
            "name": "CVE-2023-52760",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "192.212"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-52760.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2023-52760 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: greybus: Fix use-after-free bug in gb_interface_release due to race condition. In gb_interface_create, &intf->mode_switch_completion is bound with gb_interface_mode_switch_work. Then it will be started by gb_interface_request_mode_switch. Here is the relevant code. if (!queue_work(system_long_wq, &intf->mode_switch_work)) { ... } If we call gb_interface_release to make cleanup, there may be an unfinished work. This function will call kfree to free the object \"intf\". However, if gb_interface_mode_switch_work is scheduled to run after kfree, it may cause use-after-free error as gb_interface_mode_switch_work will use the object \"intf\". The possible execution flow that may lead to the issue is as follows: CPU0 CPU1 | gb_interface_create | gb_interface_request_mode_switch gb_interface_release | kfree(intf) (free) | | gb_interface_mode_switch_work | mutex_lock(&intf->mutex) (use) Fix it by canceling the work before kfree.",
            "vulnerability_id": "CVE-2024-39495",
            "name": "CVE-2024-39495",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "192.212"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-39495.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2024-39495 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: ata: libata-core: Fix double free on error If e.g. the ata_port_alloc() call in ata_host_alloc() fails, we will jump to the err_out label, which will call devres_release_group(). devres_release_group() will trigger a call to ata_host_release(). ata_host_release() calls kfree(host), so executing the kfree(host) in ata_host_alloc() will lead to a double free: kernel BUG at mm/slub.c:553! Oops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI CPU: 11 PID: 599 Comm: (udev-worker) Not tainted 6.10.0-rc5 #47 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014 RIP: 0010:kfree+0x2cf/0x2f0 Code: 5d 41 5e 41 5f 5d e9 80 d6 ff ff 4d 89 f1 41 b8 01 00 00 00 48 89 d9 48 89 da RSP: 0018:ffffc90000f377f0 EFLAGS: 00010246 RAX: ffff888112b1f2c0 RBX: ffff888112b1f2c0 RCX: ffff888112b1f320 RDX: 000000000000400b RSI: ffffffffc02c9de5 RDI: ffff888112b1f2c0 RBP: ffffc90000f37830 R08: 0000000000000000 R09: 0000000000000000 R10: ffffc9000",
            "vulnerability_id": "CVE-2024-41087",
            "name": "CVE-2024-41087",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "192.212"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-41087.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2024-41087 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: jfs: xattr: fix buffer overflow for invalid xattr When an xattr size is not what is expected, it is printed out to the kernel log in hex format as a form of debugging. But when that xattr size is bigger than the expected size, printing it out can cause an access off the end of the buffer. Fix this all up by properly restricting the size of the debug hex dump in the kernel log.",
            "vulnerability_id": "CVE-2024-40902",
            "name": "CVE-2024-40902",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "192.212"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-40902.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2024-40902 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: net: dsa: mv88e6xxx: Correct check for empty list Since commit a3c53be55c95 (\"net: dsa: mv88e6xxx: Support multiple MDIO busses\") mv88e6xxx_default_mdio_bus() has checked that the return value of list_first_entry() is non-NULL. This appears to be intended to guard against the list chip->mdios being empty. However, it is not the correct check as the implementation of list_first_entry is not designed to return NULL for empty lists. Instead, use list_first_entry_or_null() which does return NULL if the list is empty. Flagged by Smatch. Compile tested only.",
            "vulnerability_id": "CVE-2024-42224",
            "name": "CVE-2024-42224",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "192.212"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-42224.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2024-42224 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: tcp_metrics: validate source addr length I don't see anything checking that TCP_METRICS_ATTR_SADDR_IPV4 is at least 4 bytes long, and the policy doesn't have an entry for this attribute at all (neither does it for IPv6 but v6 is manually validated).",
            "vulnerability_id": "CVE-2024-42154",
            "name": "CVE-2024-42154",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "192.212"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 9.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 9.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "CRITICAL",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-42154.html",
            "source": "UBUNTU_CVE",
            "severity": "CRITICAL",
            "status": "ACTIVE",
            "title": "CVE-2024-42154 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: tcp_metrics: validate source addr length I don't see anything checking that TCP_METRICS_ATTR_SADDR_IPV4 is at least 4 bytes long, and the policy doesn't have an entry for this attribute at all (neither does it for IPv6 but v6 is manually validated).",
            "vulnerability_id": "CVE-2024-42154",
            "name": "CVE-2024-42154",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "193.213"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 9.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 9.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "CRITICAL",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-42154.html",
            "source": "UBUNTU_CVE",
            "severity": "CRITICAL",
            "status": "ACTIVE",
            "title": "CVE-2024-42154 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: greybus: Fix use-after-free bug in gb_interface_release due to race condition. In gb_interface_create, &#38;intf->mode_switch_completion is bound with gb_interface_mode_switch_work. Then it will be started by gb_interface_request_mode_switch. Here is the relevant code. if (!queue_work(system_long_wq, &#38;intf->mode_switch_work)) { ... } If we call gb_interface_release to make cleanup, there may be an unfinished work. This function will call kfree to free the object \"intf\". However, if gb_interface_mode_switch_work is scheduled to run after kfree, it may cause use-after-free error as gb_interface_mode_switch_work will use the object \"intf\". The possible execution flow that may lead to the issue is as follows: CPU0 CPU1 | gb_interface_create | gb_interface_request_mode_switch gb_interface_release | kfree(intf) (free) | | gb_interface_mode_switch_work | mutex_lock(&#38;intf->mutex) (use) Fix it by canceling the work before kfree.",
            "vulnerability_id": "CVE-2024-39495",
            "name": "CVE-2024-39495",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "193.213"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-39495.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2024-39495 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: net: dsa: mv88e6xxx: Correct check for empty list Since commit a3c53be55c95 (\"net: dsa: mv88e6xxx: Support multiple MDIO busses\") mv88e6xxx_default_mdio_bus() has checked that the return value of list_first_entry() is non-NULL. This appears to be intended to guard against the list chip->mdios being empty. However, it is not the correct check as the implementation of list_first_entry is not designed to return NULL for empty lists. Instead, use list_first_entry_or_null() which does return NULL if the list is empty. Flagged by Smatch. Compile tested only.",
            "vulnerability_id": "CVE-2024-42224",
            "name": "CVE-2024-42224",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "193.213"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-42224.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2024-42224 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "A out-of-bound vulnerability is found in the jfs subsystem. When an xattr size is not what is expected, it is printed out to the kernel log in hex format as a form of debugging. But when that xattr size is bigger than the expected size, printing it out can cause an access off the end of the buffer. This may lead to system crash.",
            "vulnerability_id": "CVE-2024-40902",
            "name": "CVE-2024-40902",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "193.213"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-40902.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2024-40902 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: ata: libata-core: Fix double free on error If e.g. the ata_port_alloc() call in ata_host_alloc() fails, we will jump to the err_out label, which will call devres_release_group(). devres_release_group() will trigger a call to ata_host_release(). ata_host_release() calls kfree(host), so executing the kfree(host) in ata_host_alloc() will lead to a double free: kernel BUG at mm/slub.c:553! Oops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI CPU: 11 PID: 599 Comm: (udev-worker) Not tainted 6.10.0-rc5 #47 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-2.fc40 04/01/2014 RIP: 0010:kfree+0x2cf/0x2f0 Code: 5d 41 5e 41 5f 5d e9 80 d6 ff ff 4d 89 f1 41 b8 01 00 00 00 48 89 d9 48 89 da RSP: 0018:ffffc90000f377f0 EFLAGS: 00010246 RAX: ffff888112b1f2c0 RBX: ffff888112b1f2c0 RCX: ffff888112b1f320 RDX: 000000000000400b RSI: ffffffffc02c9de5 RDI: ffff888112b1f2c0 RBP: ffffc90000f37830 R08: 0000000000000000 R09: 0000000000000000 R10: ffffc9000",
            "vulnerability_id": "CVE-2024-41087",
            "name": "CVE-2024-41087",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "193.213"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-41087.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2024-41087 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: greybus: Fix use-after-free bug in gb_interface_release due to race condition. In gb_interface_create, &intf->mode_switch_completion is bound with gb_interface_mode_switch_work. Then it will be started by gb_interface_request_mode_switch. Here is the relevant code. if (!queue_work(system_long_wq, &intf->mode_switch_work)) { ... } If we call gb_interface_release to make cleanup, there may be an unfinished work. This function will call kfree to free the object \"intf\". However, if gb_interface_mode_switch_work is scheduled to run after kfree, it may cause use-after-free error as gb_interface_mode_switch_work will use the object \"intf\". The possible execution flow that may lead to the issue is as follows: CPU0 CPU1 | gb_interface_create | gb_interface_request_mode_switch gb_interface_release | kfree(intf) (free) | | gb_interface_mode_switch_work | mutex_lock(&intf->mutex) (use) Fix it by canceling the work before kfree.",
            "vulnerability_id": "CVE-2024-39495",
            "name": "CVE-2024-39495",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "193.213"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-39495.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2024-39495 - linux",
            "reason_to_ignore": "N/A"
        },
        {
            "description": "In the Linux kernel, the following vulnerability has been resolved: net: sched: sch_multiq: fix possible OOB write in multiq_tune() q->bands will be assigned to qopt->bands to execute subsequent code logic after kmalloc. So the old q->bands should not be used in kmalloc. Otherwise, an out-of-bounds write will occur.",
            "vulnerability_id": "CVE-2024-36978",
            "name": "CVE-2024-36978",
            "package_name": "linux",
            "package_details": {
                "file_path": null,
                "name": "linux",
                "package_manager": "OS",
                "version": "5.4.0",
                "release": "193.213"
            },
            "remediation": {
                "recommendation": {
                    "text": "None Provided"
                }
            },
            "cvss_v3_score": 7.8,
            "cvss_v30_score": 0.0,
            "cvss_v31_score": 7.8,
            "cvss_v2_score": 0.0,
            "cvss_v3_severity": "HIGH",
            "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-36978.html",
            "source": "UBUNTU_CVE",
            "severity": "HIGH",
            "status": "ACTIVE",
            "title": "CVE-2024-36978 - linux",
            "reason_to_ignore": "N/A"
        }
    ]
}