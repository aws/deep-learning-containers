# https://github.com/aws/deep-learning-containers/blob/master/available_images.md
# refer to the above page to pull latest Tensorflow image

# docker image region us-west-2
FROM 763104351884.dkr.ecr.us-west-2.amazonaws.com/tensorflow-training:2.6.3-gpu-py38-cu112-ubuntu20.04

LABEL maintainer="Amazon AI"
LABEL dlc_major_version="1"

# version args
ARG TRANSFORMERS_VERSION
ARG DATASETS_VERSION
ARG PYTHON=python3
ARG PYTHON_VERSION=3.8.10
ARG PIP=pip3
ARG TF_URL=https://framework-binaries.s3.us-west-2.amazonaws.com/tensorflow/r2.6_aws/gpu/2022-02-26-23-00/tensorflow_gpu-2.6.3-cp38-cp38-manylinux2010_x86_64.whl

RUN apt-get update \
    # TODO: Remove upgrade statements once packages are updated in base image
    && apt-get -y upgrade --only-upgrade systemd openssl cryptsetup \
    && apt-get -y install --no-install-recommends \
    curl \
    libcurl4 \
    libcurl3-gnutls \
    git \
    libgssapi3-heimdal \
    libhx509-5-heimdal \
    libkrb5-26-heimdal \
    libasn1-8-heimdal \
    libpam-modules \
    libaom0 \
    libksba8 \
    sqlite3 \
    xxd \
    vim \
    zlib1g \
    libfreetype6 \
    libpcre2-32-0 \
    libpcre2-16-0 \
    libpcre2-posix2 \
    libpcre2-8-0 \
    openssl \
    openssh-client \
    && apt install -y git-lfs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python
RUN wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz \
    && tar -xvf Python-$PYTHON_VERSION.tgz \
    && cd Python-$PYTHON_VERSION \
    && ./configure \
    && make \
    && make install \
    && rm -rf ../Python-$PYTHON_VERSION*

WORKDIR /

RUN ${PIP} install --no-cache-dir --upgrade \
    pip \
    setuptools

# uninstall ipython jupyter utils due to incompatibility with typing-extensions==3.7.4.3
# https://github.com/huggingface/huggingface_hub/blob/main/setup.py:19
RUN ${PIP} uninstall -y IPython sparkmagic jupyter-console ipywidgets ipykernel hdijupyterutils jupyter sagemaker-studio-analytics-extension qtconsole notebook autovizwidget widgetsnbextension

ADD https://raw.githubusercontent.com/aws/deep-learning-containers/master/src/deep_learning_container.py /usr/local/bin/deep_learning_container.py

RUN chmod +x /usr/local/bin/deep_learning_container.py

#################################
# Hugging Face specific section #
#################################

RUN curl https://aws-dlc-licenses.s3.amazonaws.com/tensorflow-2.6/license.txt -o /license.txt

# Install TF Binary
RUN pip install --no-cache-dir -U $TF_URL

# We need TF_FORCE_GPU_ALLOW_GROWTH=true to prevent TF from overusing GPU memory when loading models
ENV TF_FORCE_GPU_ALLOW_GROWTH=true

# install Hugging Face libraries and its dependencies
RUN ${PIP} install --no-cache-dir --upgrade \
    transformers[sklearn,sentencepiece,audio,vision]==${TRANSFORMERS_VERSION} \
    datasets==${DATASETS_VERSION} \
    tensorflow-addons==0.12.0 \
    psutil \
    "typing-extensions==3.7.4.3" \
    # bokeh 2.3.3 is the latest compatible version for typing-extensions 3.7.4.3
    "bokeh==2.3.3" \
    certifi>=2023.07.22 \
    pyarrow>=14.0.1 \
    gevent>=23.9.0 \
    joblib>=1.2.0 \
    "Pillow>=9.1.1"

RUN HOME_DIR=/root \
    && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
    && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
    && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
    && chmod +x /usr/local/bin/testOSSCompliance \
    && chmod +x ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh \
    && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} ${PYTHON} \
    && rm -rf ${HOME_DIR}/oss_compliance*
