FROM ubuntu:16.04

LABEL maintainer="Amazon AI"

ARG PYTHON=python3
ARG PIP=pip3
ARG PYTHON_VERSION=3.6.8
ARG MX_URL=https://aws-mxnet-pypi.s3-us-west-2.amazonaws.com/1.6.0/aws_mxnet_mkl-1.6.0rc0-py2.py3-none-manylinux1_x86_64.whl

ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1
ENV LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:/usr/local/lib"
ENV PYTHONIOENCODING=UTF-8
ENV LANG=C.UTF-8
ENV LC_ALL=C.UTF-8
ENV SAGEMAKER_TRAINING_MODULE sagemaker_mxnet_container.training:main
ENV DGLBACKEND=mxnet

RUN apt-get update \
 && apt-get install -y --no-install-recommends \
    software-properties-common \
    build-essential \
    ca-certificates \
    curl \
    git \
    libopencv-dev \
    openssh-client \
    openssh-server \
    vim \
    wget \
    zlib1g-dev \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

RUN wget https://www.python.org/ftp/python/$PYTHON_VERSION/Python-$PYTHON_VERSION.tgz \
 && tar -xvf Python-$PYTHON_VERSION.tgz \
 && cd Python-$PYTHON_VERSION \
 && ./configure \
 && make \
 && make install \
 && apt-get update \
 && apt-get install -y --no-install-recommends \
    libreadline-gplv2-dev \
    libncursesw5-dev \
    libssl-dev \
    libsqlite3-dev \
    libgdbm-dev \
    libc6-dev \
    libbz2-dev \
    tk-dev \
 && make \
 && make install \
 && rm -rf ../Python-$PYTHON_VERSION* \
 && ln -s /usr/local/bin/pip3 /usr/bin/pip \
 && ln -s $(which ${PYTHON}) /usr/local/bin/python \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*


# MXNet requires pip 19.3.1 due to being backwards compatible
# with python2
RUN ${PIP} --no-cache-dir install --upgrade \
    pip==19.3.1 \
    setuptools

WORKDIR /

# All the needed artifacts should be setup before docker build command.
COPY sagemaker_mxnet_container.tar.gz /sagemaker_mxnet_container.tar.gz

# install PyYAML==5.1.2 to avoid conflict with latest awscli
# python-dateutil==2.8.0 to satisfy botocore associated with latest awscli
RUN ${PIP} install --no-cache --upgrade \
    keras-mxnet==2.2.4.2 \
    h5py==2.10.0 \
    onnx==1.6.0 \
    numpy==1.17.2 \
    pandas==0.25.1 \
    Pillow==6.2.0 \
    requests==2.22.0 \
    scikit-learn==0.20.4 \
    dgl==0.4.1 \
    scipy==1.2.2 \
    urllib3==1.24 \
    python-dateutil==2.8.0 \
    tqdm==4.39.0 \
    smdebug==0.5.0.post0 \
    sagemaker-experiments==0.1.3 \
    PyYAML==5.1.2 \
    /sagemaker_mxnet_container.tar.gz \
    ${MX_URL} \
    awscli \
 && rm /sagemaker_mxnet_container.tar.gz

# "channels first" is recommended for keras-mxnet
# https://github.com/awslabs/keras-apache-mxnet/blob/master/docs/mxnet_backend/performance_guide.md#channels-first-image-data-format-for-cnn
RUN mkdir /root/.keras \
 && echo '{"image_data_format": "channels_first"}' > /root/.keras/keras.json

# This is here to make our installed version of OpenCV work.
# https://stackoverflow.com/questions/29274638/opencv-libdc1394-error-failed-to-initialize-libdc1394
# TODO: Should we be installing OpenCV in our image like this? Is there another way we can fix this?
RUN ln -s /dev/null /dev/raw1394

COPY dockerd-entrypoint.py /usr/local/bin/dockerd-entrypoint.py
COPY deep_learning_container.py /usr/local/bin/deep_learning_container.py

RUN chmod +x /usr/local/bin/dockerd-entrypoint.py \
 && chmod +x /usr/local/bin/deep_learning_container.py

RUN curl -o /license.txt https://aws-dlc-licenses.s3.amazonaws.com/mxnet/license.txt

ENTRYPOINT ["python", "/usr/local/bin/dockerd-entrypoint.py"]
CMD ["/bin/bash"]
