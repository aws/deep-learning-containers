account_id: &ACCOUNT_ID <set-$ACCOUNT_ID-in-environment>
region: &REGION <set-$REGION-in-environment>
framework: &FRAMEWORK mxnet
version: &VERSION 1.9.0
short_version: &SHORT_VERSION 1.9
arch_type: x86

repository_info:
  inference_repository: &INFERENCE_REPOSITORY
    image_type: &INFERENCE_IMAGE_TYPE inference
    root: !join [ *FRAMEWORK, "/", *INFERENCE_IMAGE_TYPE ]
    repository_name: &REPOSITORY_NAME !join [pr, "-", *FRAMEWORK, "-", *INFERENCE_IMAGE_TYPE]
    repository: &REPOSITORY !join [ *ACCOUNT_ID, .dkr.ecr., *REGION, .amazonaws.com/, *REPOSITORY_NAME ]

context:
  inference_context: &INFERENCE_CONTEXT
    config:
      source: docker/artifacts/config.properties
      target: config.properties
    entrypoint:
      source: docker/artifacts/mms-entrypoint.py
      target:  mms-entrypoint.py
    ec2-entrypoint:
      source: docker/artifacts/mms-entrypoint.py
      target: mms-ec2-entrypoint.py
    deep_learning_container:
      source: ../../src/deep_learning_container.py
      target: deep_learning_container.py

images:
 BuildEC2MXNetCPUInferencePy3DockerImage:
   <<: *INFERENCE_REPOSITORY
   build: &MXNET_CPU_INFERENCE_PY3 false
   image_size_baseline: 3000
   device_type: &DEVICE_TYPE cpu
   python_version: &DOCKER_PYTHON_VERSION py3
   tag_python_version: &TAG_PYTHON_VERSION py38
   os_version: &OS_VERSION ubuntu20.04
   tag: !join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *OS_VERSION, "-ec2" ]
   docker_file: !join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /Dockerfile., *DEVICE_TYPE ]
   target: ec2
   context:
     <<: *INFERENCE_CONTEXT
 BuildEC2MXNetGPUInferencePy3DockerImage:
   << : *INFERENCE_REPOSITORY
   build: &MXNET_GPU_INFERENCE_PY3 false
   image_size_baseline: 6758
   device_type: &DEVICE_TYPE gpu
   python_version: &DOCKER_PYTHON_VERSION py3
   tag_python_version: &TAG_PYTHON_VERSION py38
   cuda_version: &CUDA_VERSION cu112
   os_version: &OS_VERSION ubuntu20.04
   tag: !join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *CUDA_VERSION, "-", *OS_VERSION, "-ec2" ]
   docker_file: !join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /, *CUDA_VERSION, /Dockerfile., *DEVICE_TYPE ]
   target: ec2
   context:
     <<: *INFERENCE_CONTEXT
 BuildSMMXNetCPUInferencePy3DockerImage:
   <<: *INFERENCE_REPOSITORY
   build: &MXNET_CPU_INFERENCE_PY3 false
   image_size_baseline: 3000
   device_type: &DEVICE_TYPE cpu
   python_version: &DOCKER_PYTHON_VERSION py3
   tag_python_version: &TAG_PYTHON_VERSION py38
   os_version: &OS_VERSION ubuntu20.04
   tag: !join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *OS_VERSION, "-sagemaker" ]
   docker_file: !join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /Dockerfile., *DEVICE_TYPE ]
   target: sagemaker
   context:
     <<: *INFERENCE_CONTEXT
 BuildSMMXNetGPUInferencePy3DockerImage:
  <<: *INFERENCE_REPOSITORY
  build: &MXNET_GPU_INFERENCE_PY3 false
  image_size_baseline: 6758
  device_type: &DEVICE_TYPE gpu
  python_version: &DOCKER_PYTHON_VERSION py3
  tag_python_version: &TAG_PYTHON_VERSION py38
  cuda_version: &CUDA_VERSION cu112
  os_version: &OS_VERSION ubuntu20.04
  tag: !join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *CUDA_VERSION, "-", *OS_VERSION, "-sagemaker" ]
  docker_file: !join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /, *CUDA_VERSION, /Dockerfile., *DEVICE_TYPE ]
  target: sagemaker
  context:
    <<: *INFERENCE_CONTEXT
