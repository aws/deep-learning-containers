  account_id: '&ACCOUNT_ID <set-$ACCOUNT_ID-in-environment>'
  region: '&REGION <set-$REGION-in-environment>'
  framework: '&FRAMEWORK tensorflow'
  version: '&VERSION 1.2.3'
  short_version: '&SHORT_VERSION 1.2'

  repository_info:
    training_repository: &TRAINING_REPOSITORY
      image_type: '&TRAINING_IMAGE_TYPE training'
      root: '!join [ *FRAMEWORK, "/", *TRAINING_IMAGE_TYPE ]'
      repository_name: '&REPOSITORY_NAME !join [pr, "-", *FRAMEWORK, "-", *TRAINING_IMAGE_TYPE]'
      repository: '&REPOSITORY !join [ *ACCOUNT_ID, .dkr.ecr., *REGION, .amazonaws.com/, *REPOSITORY_NAME ]'
    inference_repository: &INFERENCE_REPOSITORY
      image_type: '&INFERENCE_IMAGE_TYPE inference'
      root: '!join [ *FRAMEWORK, "/", *INFERENCE_IMAGE_TYPE ]'
      repository_name: '&REPOSITORY_NAME !join [pr, "-", *FRAMEWORK, "-", *INFERENCE_IMAGE_TYPE]'
      repository: '&REPOSITORY !join [ *ACCOUNT_ID, .dkr.ecr., *REGION, .amazonaws.com/, *REPOSITORY_NAME ]'

  context:
    training_context: &TRAINING_CONTEXT
      dockerd-entrypoint:
        source: docker/build_artifacts/dockerd-entrypoint.py
        target: dockerd-entrypoint.py
    inference_context: &INFERENCE_CONTEXT
      sagemaker_package_name:
        source: docker/build_artifacts/sagemaker
        target: sagemaker
      init:
        source: docker/build_artifacts/__init__.py
        target: __init__.py
      dockerd-entrypoint:
        source: docker/build_artifacts/dockerd-entrypoint.py
        target: dockerd-entrypoint.py

  images:
    BuildTensorflowCPUTrainPy37DockerImage:
      '<<': *TRAINING_REPOSITORY
      build: '&TENSORFLOW_CPU_TRAINING_PY3 false'
      image_size_baseline: 1000
      device_type: '&DEVICE_TYPE cpu'
      python_version: '&DOCKER_PYTHON_VERSION py3'
      tag_python_version: '&TAG_PYTHON_VERSION py37'
      os_version: '&OS_VERSION ubuntu18.04'
      tag: '!join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *OS_VERSION ]'
      docker_file: '!join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /Dockerfile., *DEVICE_TYPE ]'
      context:
        <<: *TRAINING_CONTEXT
    BuildTensorflowGPUTrainCu102Py37DockerImage:
      '<<': *TRAINING_REPOSITORY
      build: '&TENSORFLOW_GPU_TRAINING_PY3 false'
      image_size_baseline: 1000
      device_type: '&DEVICE_TYPE gpu'
      python_version: '&DOCKER_PYTHON_VERSION py3'
      tag_python_version: '&TAG_PYTHON_VERSION py37'
      cuda_version: '&CUDA_VERSION cu102'
      os_version: '&OS_VERSION ubuntu18.04'
      tag: '!join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *CUDA_VERSION, "-", *OS_VERSION ]'
      docker_file: '!join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /, *CUDA_VERSION, /Dockerfile., *DEVICE_TYPE ]'
      context:
        <<: *TRAINING_CONTEXT
    BuildTensorflowExampleGPUTrainCu102Py37DockerImage:
      '<<': *TRAINING_REPOSITORY
      build: '&TENSORFLOW_GPU_TRAINING_PY3 false'
      image_size_baseline: 1000
      base_image_name: BuildTensorflowGPUTrainCu102Py37DockerImage
      device_type: '&DEVICE_TYPE gpu'
      python_version: '&DOCKER_PYTHON_VERSION py3'
      tag_python_version: '&TAG_PYTHON_VERSION py37'
      cuda_version: '&CUDA_VERSION cu102'
      os_version: '&OS_VERSION ubuntu18.04'
      tag: '!join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *CUDA_VERSION, "-", *OS_VERSION,
                   "-example" ]'
      docker_file: '!join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /example, /Dockerfile., *DEVICE_TYPE ]'
      context:
        <<: *TRAINING_CONTEXT
    BuildTensorflowCPUInferencePy37DockerImage:
      '<<': *INFERENCE_REPOSITORY
      build: '&TENSORFLOW_CPU_INFERENCE_PY3 false'
      image_size_baseline: 1000
      device_type: '&DEVICE_TYPE cpu'
      python_version: '&DOCKER_PYTHON_VERSION py3'
      tag_python_version: '&TAG_PYTHON_VERSION py37'
      os_version: '&OS_VERSION ubuntu18.04'
      tag: '!join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *OS_VERSION ]'
      docker_file: '!join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /Dockerfile., *DEVICE_TYPE ]'
      context:
        <<: *INFERENCE_CONTEXT
    BuildTensorflowGPUInferenceCu102Py37DockerImage:
      '<<': *INFERENCE_REPOSITORY
      build: '&TENSORFLOW_GPU_INFERENCE_PY3 false'
      image_size_baseline: 1000
      device_type: '&DEVICE_TYPE gpu'
      python_version: '&DOCKER_PYTHON_VERSION py3'
      tag_python_version: '&TAG_PYTHON_VERSION py37'
      cuda_version: '&CUDA_VERSION cu102'
      os_version: '&OS_VERSION ubuntu18.04'
      tag: '!join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *CUDA_VERSION, "-", *OS_VERSION ]'
      docker_file: '!join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /, *CUDA_VERSION, /Dockerfile., *DEVICE_TYPE ]'
      context:
        <<: *INFERENCE_CONTEXT
