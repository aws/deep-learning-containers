  account_id: &ACCOUNT_ID <set-$ACCOUNT_ID-in-environment>
  region: &REGION <set-$REGION-in-environment>
  framework: &FRAMEWORK tensorflow
  version: &VERSION 2.7.0
  short_version: &SHORT_VERSION 2.7

  repository_info:
    inference_repository: &INFERENCE_REPOSITORY
        image_type: &INFERENCE_IMAGE_TYPE inference
        root: !join [ *FRAMEWORK, "/", *INFERENCE_IMAGE_TYPE ]
        repository_name: &REPOSITORY_NAME !join [pr, "-", *FRAMEWORK, "-", *INFERENCE_IMAGE_TYPE, "-", graviton]
        repository: &REPOSITORY !join [ *ACCOUNT_ID, .dkr.ecr., *REGION, .amazonaws.com/, *REPOSITORY_NAME ]

  context:
    inference_context: &INFERENCE_CONTEXT
      init:
        source: docker/build_artifacts/__init__.py
        target: __init__.py
      dockerd-entrypoint:
        source: docker/build_artifacts/dockerd-entrypoint.py
        target: dockerd-entrypoint.py
      deep_learning_container:
        source: ../../src/deep_learning_container.py
        target: deep_learning_container.py
  images:
    BuildE3TensorflowCPUInferencePy3DockerImage:
      <<: *INFERENCE_REPOSITORY
      build: &TENSORFLOW_CPU_INFERENCE_PY3 false
      image_size_baseline: 5000
      device_type: &DEVICE_TYPE cpu
      python_version: &DOCKER_PYTHON_VERSION py3
      tag_python_version: &TAG_PYTHON_VERSION py38
      os_version: &OS_VERSION ubuntu20.04
      tag: !join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *OS_VERSION, "-e3" ]
      docker_file: !join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /Dockerfile.graviton.e3., *DEVICE_TYPE ]
      context:
        <<: *INFERENCE_CONTEXT
