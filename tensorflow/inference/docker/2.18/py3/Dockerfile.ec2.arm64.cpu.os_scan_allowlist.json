{
  "emacs": [
    {
      "description": "GNU Emacs through 28.2 allows attackers to execute commands via shell metacharacters in the name of a source-code file, because lib-src/etags.c uses the system C library function in its implementation of the ctags program. For example, a victim may use the \"ctags *\" command (suggested in the ctags documentation) in a situation where the current working directory has contents that depend on untrusted input.",
      "vulnerability_id": "CVE-2022-45939",
      "name": "CVE-2022-45939",
      "package_name": "emacs",
      "package_details": {
        "file_path": null,
        "name": "emacs",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-45939.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-45939 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "org-babel-execute:latex in ob-latex.el in Org Mode through 9.6.1 for GNU Emacs allows attackers to execute arbitrary commands via a file name or directory name that contains shell metacharacters.",
      "vulnerability_id": "CVE-2023-28617",
      "name": "CVE-2023-28617",
      "package_name": "emacs",
      "package_details": {
        "file_path": null,
        "name": "emacs",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-28617.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-28617 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "An issue was discovered in GNU Emacs through 28.2. htmlfontify.el has a command injection vulnerability. In the hfy-istext-command function, the parameter file and parameter srcdir come from external input, and parameters are not escaped. If a file name or directory name contains shell metacharacters, code may be executed.",
      "vulnerability_id": "CVE-2022-48339",
      "name": "CVE-2022-48339",
      "package_name": "emacs",
      "package_details": {
        "file_path": null,
        "name": "emacs",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-48339.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-48339 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "An issue was discovered in GNU Emacs through 28.2. In ruby-mode.el, the ruby-find-library-file function has a local command injection vulnerability. The ruby-find-library-file function is an interactive function, and bound to C-c C-f. Inside the function, the external command gem is called through shell-command-to-string, but the feature-name parameters are not escaped. Thus, malicious Ruby source files may cause commands to be executed.",
      "vulnerability_id": "CVE-2022-48338",
      "name": "CVE-2022-48338",
      "package_name": "emacs",
      "package_details": {
        "file_path": null,
        "name": "emacs",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.3,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.3,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-48338.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-48338 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "GNU Emacs through 28.2 allows attackers to execute commands via shell metacharacters in the name of a source-code file, because lib-src/etags.c uses the system C library function in its implementation of the etags program. For example, a victim may use the \"etags -u *\" command (suggested in the etags documentation) in a situation where the current working directory has contents that depend on untrusted input.",
      "vulnerability_id": "CVE-2022-48337",
      "name": "CVE-2022-48337",
      "package_name": "emacs",
      "package_details": {
        "file_path": null,
        "name": "emacs",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 9.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 9.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "CRITICAL",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-48337.html",
      "source": "UBUNTU_CVE",
      "severity": "CRITICAL",
      "status": "ACTIVE",
      "title": "CVE-2022-48337 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    }
  ],
  "emacs-bin-common": [
    {
      "description": "GNU Emacs through 28.2 allows attackers to execute commands via shell metacharacters in the name of a source-code file, because lib-src/etags.c uses the system C library function in its implementation of the ctags program. For example, a victim may use the \"ctags *\" command (suggested in the ctags documentation) in a situation where the current working directory has contents that depend on untrusted input.",
      "vulnerability_id": "CVE-2022-45939",
      "name": "CVE-2022-45939",
      "package_name": "emacs-bin-common",
      "package_details": {
        "file_path": null,
        "name": "emacs-bin-common",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-45939.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-45939 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "org-babel-execute:latex in ob-latex.el in Org Mode through 9.6.1 for GNU Emacs allows attackers to execute arbitrary commands via a file name or directory name that contains shell metacharacters.",
      "vulnerability_id": "CVE-2023-28617",
      "name": "CVE-2023-28617",
      "package_name": "emacs-bin-common",
      "package_details": {
        "file_path": null,
        "name": "emacs-bin-common",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-28617.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-28617 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "An issue was discovered in GNU Emacs through 28.2. htmlfontify.el has a command injection vulnerability. In the hfy-istext-command function, the parameter file and parameter srcdir come from external input, and parameters are not escaped. If a file name or directory name contains shell metacharacters, code may be executed.",
      "vulnerability_id": "CVE-2022-48339",
      "name": "CVE-2022-48339",
      "package_name": "emacs-bin-common",
      "package_details": {
        "file_path": null,
        "name": "emacs-bin-common",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-48339.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-48339 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "An issue was discovered in GNU Emacs through 28.2. In ruby-mode.el, the ruby-find-library-file function has a local command injection vulnerability. The ruby-find-library-file function is an interactive function, and bound to C-c C-f. Inside the function, the external command gem is called through shell-command-to-string, but the feature-name parameters are not escaped. Thus, malicious Ruby source files may cause commands to be executed.",
      "vulnerability_id": "CVE-2022-48338",
      "name": "CVE-2022-48338",
      "package_name": "emacs-bin-common",
      "package_details": {
        "file_path": null,
        "name": "emacs-bin-common",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.3,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.3,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-48338.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-48338 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "GNU Emacs through 28.2 allows attackers to execute commands via shell metacharacters in the name of a source-code file, because lib-src/etags.c uses the system C library function in its implementation of the etags program. For example, a victim may use the \"etags -u *\" command (suggested in the etags documentation) in a situation where the current working directory has contents that depend on untrusted input.",
      "vulnerability_id": "CVE-2022-48337",
      "name": "CVE-2022-48337",
      "package_name": "emacs-bin-common",
      "package_details": {
        "file_path": null,
        "name": "emacs-bin-common",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 9.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 9.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "CRITICAL",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-48337.html",
      "source": "UBUNTU_CVE",
      "severity": "CRITICAL",
      "status": "ACTIVE",
      "title": "CVE-2022-48337 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    }
  ],
  "emacs-common": [
    {
      "description": "GNU Emacs through 28.2 allows attackers to execute commands via shell metacharacters in the name of a source-code file, because lib-src/etags.c uses the system C library function in its implementation of the ctags program. For example, a victim may use the \"ctags *\" command (suggested in the ctags documentation) in a situation where the current working directory has contents that depend on untrusted input.",
      "vulnerability_id": "CVE-2022-45939",
      "name": "CVE-2022-45939",
      "package_name": "emacs-common",
      "package_details": {
        "file_path": null,
        "name": "emacs-common",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-45939.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-45939 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "org-babel-execute:latex in ob-latex.el in Org Mode through 9.6.1 for GNU Emacs allows attackers to execute arbitrary commands via a file name or directory name that contains shell metacharacters.",
      "vulnerability_id": "CVE-2023-28617",
      "name": "CVE-2023-28617",
      "package_name": "emacs-common",
      "package_details": {
        "file_path": null,
        "name": "emacs-common",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-28617.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-28617 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "An issue was discovered in GNU Emacs through 28.2. htmlfontify.el has a command injection vulnerability. In the hfy-istext-command function, the parameter file and parameter srcdir come from external input, and parameters are not escaped. If a file name or directory name contains shell metacharacters, code may be executed.",
      "vulnerability_id": "CVE-2022-48339",
      "name": "CVE-2022-48339",
      "package_name": "emacs-common",
      "package_details": {
        "file_path": null,
        "name": "emacs-common",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-48339.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-48339 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "An issue was discovered in GNU Emacs through 28.2. In ruby-mode.el, the ruby-find-library-file function has a local command injection vulnerability. The ruby-find-library-file function is an interactive function, and bound to C-c C-f. Inside the function, the external command gem is called through shell-command-to-string, but the feature-name parameters are not escaped. Thus, malicious Ruby source files may cause commands to be executed.",
      "vulnerability_id": "CVE-2022-48338",
      "name": "CVE-2022-48338",
      "package_name": "emacs-common",
      "package_details": {
        "file_path": null,
        "name": "emacs-common",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.3,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.3,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-48338.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-48338 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "GNU Emacs through 28.2 allows attackers to execute commands via shell metacharacters in the name of a source-code file, because lib-src/etags.c uses the system C library function in its implementation of the etags program. For example, a victim may use the \"etags -u *\" command (suggested in the etags documentation) in a situation where the current working directory has contents that depend on untrusted input.",
      "vulnerability_id": "CVE-2022-48337",
      "name": "CVE-2022-48337",
      "package_name": "emacs-common",
      "package_details": {
        "file_path": null,
        "name": "emacs-common",
        "package_manager": "OS",
        "version": "26.3+1",
        "release": "1ubuntu2"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 9.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 9.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "CRITICAL",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-48337.html",
      "source": "UBUNTU_CVE",
      "severity": "CRITICAL",
      "status": "ACTIVE",
      "title": "CVE-2022-48337 - emacs, emacs-common and 1 more",
      "reason_to_ignore": "N/A"
    }
  ],
  "linux-libc-dev": [
    {
      "description": "In the Linux kernel, the following vulnerability has been resolved: sunrpc: fix one UAF issue caused by sunrpc kernel tcp socket BUG: KASAN: slab-use-after-free in tcp_write_timer_handler+0x156/0x3e0 Read of size 1 at addr ffff888111f322cd by task swapper/0/0 CPU: 0 UID: 0 PID: 0 Comm: swapper/0 Not tainted 6.12.0-rc4-dirty #7 Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.15.0-1 Call Trace: <IRQ> dump_stack_lvl+0x68/0xa0 print_address_description.constprop.0+0x2c/0x3d0 print_report+0xb4/0x270 kasan_report+0xbd/0xf0 tcp_write_timer_handler+0x156/0x3e0 tcp_write_timer+0x66/0x170 call_timer_fn+0xfb/0x1d0 __run_timers+0x3f8/0x480 run_timer_softirq+0x9b/0x100 handle_softirqs+0x153/0x390 __irq_exit_rcu+0x103/0x120 irq_exit_rcu+0xe/0x20 sysvec_apic_timer_interrupt+0x76/0x90 </IRQ> <TASK> asm_sysvec_apic_timer_interrupt+0x1a/0x20 RIP: 0010:default_idle+0xf/0x20 Code: 4c 01 c7 4c 29 c2 e9 72 ff ff ff 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 ** 0f 1e ** 66 90 0f 00 2d 33 f8 25 00 fb f4 <fa> c3 cc",
      "vulnerability_id": "CVE-2024-53168",
      "name": "CVE-2024-53168",
      "package_name": "linux-libc-dev",
      "package_details": {
        "file_path": null,
        "name": "linux-libc-dev",
        "package_manager": "OS",
        "version": "5.4.0",
        "release": "216.236"
      },
      "remediation": {"recommendation": {"text": "None Provided"}},
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-53168.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2024-53168 - linux-libc-dev",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "In the Linux kernel, the following vulnerability has been resolved: smb: client: fix potential deadlock when releasing mids All release_mid() callers seem to hold a reference of @mid so there is no need to call kref_put(&mid->refcount, __release_mid) under @server->mid_lock spinlock. If they don't, then an use-after-free bug would have occurred anyways. By getting rid of such spinlock also fixes a potential deadlock as shown below CPU 0 CPU 1 ------------------------------------------------------------------ cifs_demultiplex_thread() cifs_debug_data_proc_show() release_mid() spin_lock(&server->mid_lock); spin_lock(&cifs_tcp_ses_lock) spin_lock(&server->mid_lock) __release_mid() smb2_find_smb_tcon() spin_lock(&cifs_tcp_ses_lock) deadlock",
      "vulnerability_id": "CVE-2023-52757",
      "name": "CVE-2023-52757",
      "package_name": "linux-libc-dev",
      "package_details": {
        "file_path": null,
        "name": "linux-libc-dev",
        "package_manager": "OS",
        "version": "5.4.0",
        "release": "216.236"
      },
      "remediation": {"recommendation": {"text": "None Provided"}},
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-52757.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-52757 - linux-libc-dev",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "In the Linux kernel, the following vulnerability has been resolved: tracing: Fix use-after-free in print_graph_function_flags during tracer switching Kairui reported a UAF issue in print_graph_function_flags() during ftrace stress testing [1]. This issue can be reproduced if puting a 'mdelay(10)' after 'mutex_unlock(&trace_types_lock)' in s_start(), and executing the following script: $ echo function_graph > current_tracer $ cat trace > /dev/null & $ sleep 5 # Ensure the 'cat' reaches the 'mdelay(10)' point $ echo timerlat > current_tracer The root cause lies in the two calls to print_graph_function_flags within print_trace_line during each s_show(): * One through 'iter->trace->print_line()'; * Another through 'event->funcs->trace()', which is hidden in print_trace_fmt() before print_trace_line returns. Tracer switching only updates the former, while the latter continues to use the print_line function of the old tracer, which in the script above is print_graph_function_flags. Moreover, when switching from the",
      "vulnerability_id": "CVE-2025-22035",
      "name": "CVE-2025-22035",
      "package_name": "linux-libc-dev",
      "package_details": {
        "file_path": null,
        "name": "linux-libc-dev",
        "package_manager": "OS",
        "version": "5.4.0",
        "release": "216.236"
      },
      "remediation": {"recommendation": {"text": "None Provided"}},
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2025/CVE-2025-22035.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2025-22035 - linux-libc-dev",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "In the Linux kernel, the following vulnerability has been resolved: Bluetooth: L2CAP: Fix uaf in l2cap_connect [Syzbot reported] BUG: KASAN: slab-use-after-free in l2cap_connect.constprop.0+0x10d8/0x1270 net/bluetooth/l2cap_core.c:3949 Read of size 8 at addr ffff8880241e9800 by task kworker/u9:0/54",
      "vulnerability_id": "CVE-2024-49950",
      "name": "CVE-2024-49950",
      "package_name": "linux-libc-dev",
      "package_details": {
        "file_path": null,
        "name": "linux-libc-dev",
        "package_manager": "OS",
        "version": "5.4.0",
        "release": "216.236"
      },
      "remediation": {"recommendation": {"text": "None Provided"}},
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-49950.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2024-49950 - linux-libc-dev",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "In the Linux kernel, the following vulnerability has been resolved: smb: client: fix UAF in async decryption Doing an async decryption (large read) crashes with a slab-use-after-free way down in the crypto API. Reproducer: # mount.cifs -o ...,seal,esize=1 //srv/share /mnt # dd if=/mnt/largefile of=/dev/null",
      "vulnerability_id": "CVE-2024-50047",
      "name": "CVE-2024-50047",
      "package_name": "linux-libc-dev",
      "package_details": {
        "file_path": null,
        "name": "linux-libc-dev",
        "package_manager": "OS",
        "version": "5.4.0",
        "release": "216.236"
      },
      "remediation": {"recommendation": {"text": "None Provided"}},
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-50047.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2024-50047 - linux-libc-dev",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "In the Linux kernel, the following vulnerability has been resolved: iscsi_ibft: Fix UBSAN shift-out-of-bounds warning in ibft_attr_show_nic() When performing an iSCSI boot using IPv6, iscsistart still reads the /sys/firmware/ibft/ethernetX/subnet-mask entry. Since the IPv6 prefix length is 64, this causes the shift exponent to become negative, triggering a UBSAN warning. As the concept of a subnet mask does not apply to IPv6, the value is set to ~0 to suppress the warning message.",
      "vulnerability_id": "CVE-2025-21993",
      "name": "CVE-2025-21993",
      "package_name": "linux-libc-dev",
      "package_details": {
        "file_path": null,
        "name": "linux-libc-dev",
        "package_manager": "OS",
        "version": "5.4.0",
        "release": "216.236"
      },
      "remediation": {"recommendation": {"text": "None Provided"}},
      "cvss_v3_score": 7.1,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.1,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2025/CVE-2025-21993.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2025-21993 - linux-libc-dev",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "In the Linux kernel, the following vulnerability has been resolved: memstick: rtsx_usb_ms: Fix slab-use-after-free in rtsx_usb_ms_drv_remove This fixes the following crash: ================================================================== BUG: KASAN: slab-use-after-free in rtsx_usb_ms_poll_card+0x159/0x200 [rtsx_usb_ms] Read of size 8 at addr ffff888136335380 by task kworker/6:0/140241",
      "vulnerability_id": "CVE-2025-22020",
      "name": "CVE-2025-22020",
      "package_name": "linux-libc-dev",
      "package_details": {
        "file_path": null,
        "name": "linux-libc-dev",
        "package_manager": "OS",
        "version": "5.4.0",
        "release": "216.236"
      },
      "remediation": {"recommendation": {"text": "None Provided"}},
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2025/CVE-2025-22020.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2025-22020 - linux-libc-dev",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "In the Linux kernel, the following vulnerability has been resolved: x86/microcode/AMD: Fix out-of-bounds on systems with CPU-less NUMA nodes Currently, load_microcode_amd() iterates over all NUMA nodes, retrieves their CPU masks and unconditionally accesses per-CPU data for the first CPU of each mask. According to Documentation/admin-guide/mm/numaperf.rst: \"Some memory may share the same node as a CPU, and others are provided as memory only nodes.\" Therefore, some node CPU masks may be empty and wouldn't have a \"first CPU\". On a machine with far memory (and therefore CPU-less NUMA nodes): - cpumask_of_node(nid) is 0 - cpumask_first(0) is CONFIG_NR_CPUS - cpu_data(CONFIG_NR_CPUS) accesses the cpu_info per-CPU array at an index that is 1 out of bounds",
      "vulnerability_id": "CVE-2025-21991",
      "name": "CVE-2025-21991",
      "package_name": "linux-libc-dev",
      "package_details": {
        "file_path": null,
        "name": "linux-libc-dev",
        "package_manager": "OS",
        "version": "5.4.0",
        "release": "216.236"
      },
      "remediation": {"recommendation": {"text": "None Provided"}},
      "cvss_v3_score": 7.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2025/CVE-2025-21991.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2025-21991 - linux-libc-dev",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "In the Linux kernel, the following vulnerability has been resolved: jfs: fix slab-out-of-bounds read in ea_get() During the \"size_check\" label in ea_get(), the code checks if the extended attribute list (xattr) size matches ea_size. If not, it logs \"ea_get: invalid extended attribute\" and calls print_hex_dump(). Here, EALIST_SIZE(ea_buf->xattr) returns 4110417968, which exceeds INT_MAX (2,147,483,647). Then ea_size is clamped: int size = clamp_t(int, ea_size, 0, EALIST_SIZE(ea_buf->xattr)); Although clamp_t aims to bound ea_size between 0 and 4110417968, the upper limit is treated as an int, causing an overflow above 2^31 - 1.",
      "vulnerability_id": "CVE-2025-39735",
      "name": "CVE-2025-39735",
      "package_name": "linux-libc-dev",
      "package_details": {
        "file_path": null,
        "name": "linux-libc-dev",
        "package_manager": "OS",
        "version": "5.4.0",
        "release": "216.236"
      },
      "remediation": {"recommendation": {"text": "None Provided"}},
      "cvss_v3_score": 7.1,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.1,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2025/CVE-2025-39735.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2025-39735 - linux-libc-dev",
      "reason_to_ignore": "N/A"
    }
  ]
}
