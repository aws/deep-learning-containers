{
  "openssl": [
    {
      "description": "A NULL pointer can be dereferenced when signatures are being verified on PKCS7 signed or signedAndEnveloped data. In case the hash algorithm used for the signature is known to the OpenSSL library but the implementation of the hash algorithm is not available the digest initialization will fail. There is a missing check for the return value from the initialization function which later leads to invalid usage of the digest API most likely leading to a crash. The unavailability of an algorithm can be caused by using FIPS enabled configuration of providers or more commonly by not loading the legacy provider. PKCS7 data is processed by the SMIME library calls and also by the time stamp (TS) library calls. The TLS implementation in OpenSSL does not call these functions however third party applications would be affected if they call these functions to verify signatures on untrusted data.",
      "vulnerability_id": "CVE-2023-0401",
      "name": "CVE-2023-0401",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-0401.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-0401 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "If an X.509 certificate contains a malformed policy constraint and policy processing is enabled, then a write lock will be taken twice recursively. On some operating systems (most widely: Windows) this results in a denial of service when the affected process hangs. Policy processing being enabled on a publicly facing server is not considered to be a common setup. Policy processing is enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function. Update (31 March 2023): The description of the policy processing enablement was corrected based on CVE-2023-0466.",
      "vulnerability_id": "CVE-2022-3996",
      "name": "CVE-2022-3996",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-3996.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-3996 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "The public API function BIO_new_NDEF is a helper function used for streaming ASN.1 data via a BIO. It is primarily used internally to OpenSSL to support the SMIME, CMS and PKCS7 streaming capabilities, but may also be called directly by end user applications. The function receives a BIO from the caller, prepends a new BIO_f_asn1 filter BIO onto the front of it to form a BIO chain, and then returns the new head of the BIO chain to the caller. Under certain conditions, for example if a CMS recipient public key is invalid, the new filter BIO is freed and the function returns a NULL result indicating a failure. However, in this case, the BIO chain is not properly cleaned up and the BIO passed by the caller still retains internal pointers to the previously freed filter BIO. If the caller then goes on to call BIO_pop() on the BIO then a use-after-free will occur. This will most likely result in a crash. This scenario occurs directly in the internal function B64_write_ASN1() which may cause BIO_new_NDEF() to be call",
      "vulnerability_id": "CVE-2023-0215",
      "name": "CVE-2023-0215",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-0215.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-0215 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "A security vulnerability has been identified in all supported versions of OpenSSL related to the verification of X.509 certificate chains that include policy constraints. Attackers may be able to exploit this vulnerability by creating a malicious certificate chain that triggers exponential use of computational resources, leading to a denial-of-service (DoS) attack on affected systems. Policy processing is disabled by default but can be enabled by passing the `-policy' argument to the command line utilities or by calling the `X509_VERIFY_PARAM_set1_policies()' function.",
      "vulnerability_id": "CVE-2023-0464",
      "name": "CVE-2023-0464",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-0464.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-0464 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "Issue summary: Calling the OpenSSL API function SSL_free_buffers may cause memory to be accessed that was previously freed in some situations Impact summary: A use after free can have a range of potential consequences such as the corruption of valid data, crashes or execution of arbitrary code. However, only applications that directly call the SSL_free_buffers function are affected by this issue. Applications that do not call this function are not vulnerable. Our investigations indicate that this function is rarely used by applications. The SSL_free_buffers function is used to free the internal OpenSSL buffer used when processing an incoming record from the network. The call is only expected to succeed if the buffer is not currently in use. However, two scenarios have been identified where the buffer is freed even when still in use. The first scenario occurs where a record header has been received from the network and processed by OpenSSL, but the full record body has not yet arrived. In this case calling SSL",
      "vulnerability_id": "CVE-2024-4741",
      "name": "CVE-2024-4741",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-4741.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2024-4741 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "An invalid pointer dereference on read can be triggered when an application tries to load malformed PKCS7 data with the d2i_PKCS7(), d2i_PKCS7_bio() or d2i_PKCS7_fp() functions. The result of the dereference is an application crash which could lead to a denial of service attack. The TLS implementation in OpenSSL does not call this function however third party applications might call these functions on untrusted data.",
      "vulnerability_id": "CVE-2023-0216",
      "name": "CVE-2023-0216",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-0216.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-0216 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "The c_rehash script does not properly sanitise shell metacharacters to prevent command injection. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2). Fixed in OpenSSL 1.1.1o (Affected 1.1.1-1.1.1n). Fixed in OpenSSL 1.0.2ze (Affected 1.0.2-1.0.2zd).",
      "vulnerability_id": "CVE-2022-1292",
      "name": "CVE-2022-1292",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 9.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 9.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "CRITICAL",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-1292.html",
      "source": "UBUNTU_CVE",
      "severity": "CRITICAL",
      "status": "ACTIVE",
      "title": "CVE-2022-1292 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "Issue summary: A bug has been identified in the processing of key and initialisation vector (IV) lengths. This can lead to potential truncation or overruns during the initialisation of some symmetric ciphers. Impact summary: A truncation in the IV can result in non-uniqueness, which could result in loss of confidentiality for some cipher modes. When calling EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() or EVP_CipherInit_ex2() the provided OSSL_PARAM array is processed after the key and IV have been established. Any alterations to the key length, via the \"keylen\" parameter or the IV length, via the \"ivlen\" parameter, within the OSSL_PARAM array will not take effect as intended, potentially causing truncation or overreading of these values. The following ciphers and cipher modes are impacted: RC2, RC4, RC5, CCM, GCM and OCB. For the CCM, GCM and OCB cipher modes, truncation of the IV can result in loss of confidentiality. For example, when following NIST's SP 800-38D section 8.2.1 guidance for constructing a det",
      "vulnerability_id": "CVE-2023-5363",
      "name": "CVE-2023-5363",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-5363.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-5363 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed the malicious certificate or for the application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address to overflow four attacker-controlled bytes on the stack. This buffer overflow could result in a crash (causing a denial of service) or potentially remote code execution. Many platforms implement stack overflow protections which would mitigate against the risk of remote code execution. The risk may be further mitigated based on stack layout for any given platform/compiler. Pre-announcements of CVE-2022-3602 described this issue as CRITICAL. Further analysis based on some of the mitigating factors described above have led this to be downgraded to HIGH. Users are still encouraged to upgrade to a new version a",
      "vulnerability_id": "CVE-2022-3602",
      "name": "CVE-2022-3602",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-3602.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-3602 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "OpenSSL supports creating a custom cipher via the legacy EVP_CIPHER_meth_new() function and associated function calls. This function was deprecated in OpenSSL 3.0 and application authors are instead encouraged to use the new provider mechanism in order to implement custom ciphers. OpenSSL versions 3.0.0 to 3.0.5 incorrectly handle legacy custom ciphers passed to the EVP_EncryptInit_ex2(), EVP_DecryptInit_ex2() and EVP_CipherInit_ex2() functions (as well as other similarly named encryption and decryption initialisation functions). Instead of using the custom cipher directly it incorrectly tries to fetch an equivalent cipher from the available providers. An equivalent cipher is found based on the NID passed to EVP_CIPHER_meth_new(). This NID is supposed to represent the unique NID for a given cipher. However it is possible for an application to incorrectly pass NID_undef as this value in the call to EVP_CIPHER_meth_new(). When NID_undef is used in this way the OpenSSL encryption/decryption initialisation functi",
      "vulnerability_id": "CVE-2022-3358",
      "name": "CVE-2022-3358",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-3358.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-3358 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "Issue summary: Calling the OpenSSL API function SSL_select_next_proto with an empty supported client protocols buffer may cause a crash or memory contents to be sent to the peer. Impact summary: A buffer overread can have a range of potential consequences such as unexpected application beahviour or a crash. In particular this issue could result in up to 255 bytes of arbitrary private data from memory being sent to the peer leading to a loss of confidentiality. However, only applications that directly call the SSL_select_next_proto function with a 0 length list of supported client protocols are affected by this issue. This would normally never be a valid scenario and is typically not under attacker control but may occur by accident in the case of a configuration or programming error in the calling application. The OpenSSL API function SSL_select_next_proto is typically used by TLS applications that support ALPN (Application Layer Protocol Negotiation) or NPN (Next Protocol Negotiation). NPN is older, was never",
      "vulnerability_id": "CVE-2024-5535",
      "name": "CVE-2024-5535",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 9.1,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 9.1,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "CRITICAL",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-5535.html",
      "source": "UBUNTU_CVE",
      "severity": "CRITICAL",
      "status": "ACTIVE",
      "title": "CVE-2024-5535 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "A buffer overrun can be triggered in X.509 certificate verification, specifically in name constraint checking. Note that this occurs after certificate chain signature verification and requires either a CA to have signed a malicious certificate or for an application to continue certificate verification despite failure to construct a path to a trusted issuer. An attacker can craft a malicious email address in a certificate to overflow an arbitrary number of bytes containing the `.' character (decimal 46) on the stack. This buffer overflow could result in a crash (causing a denial of service). In a TLS client, this can be triggered by connecting to a malicious server. In a TLS server, this can be triggered if the server requests client authentication and a malicious client connects.",
      "vulnerability_id": "CVE-2022-3786",
      "name": "CVE-2022-3786",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-3786.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-3786 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "The OPENSSL_LH_flush() function, which empties a hash table, contains a bug that breaks reuse of the memory occuppied by the removed hash table entries. This function is used when decoding certificates or keys. If a long lived process periodically decodes certificates or keys its memory usage will expand without bounds and the process might be terminated by the operating system causing a denial of service. Also traversing the empty hash table entries will take increasingly more time. Typically such long lived processes might be TLS clients or TLS servers configured to accept client certificate authentication. The function was added in the OpenSSL 3.0 version thus older releases are not affected by the issue. Fixed in OpenSSL 3.0.3 (Affected 3.0.0,3.0.1,3.0.2).",
      "vulnerability_id": "CVE-2022-1473",
      "name": "CVE-2022-1473",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-1473.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-1473 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "Issue summary: Applications performing certificate name checks (e.g., TLS clients checking server certificates) may attempt to read an invalid memory address resulting in abnormal termination of the application process. Impact summary: Abnormal termination of an application can a cause a denial of service. Applications performing certificate name checks (e.g., TLS clients checking server certificates) may attempt to read an invalid memory address when comparing the expected name with an `otherName` subject alternative name of an X.509 certificate. This may result in an exception that terminates the application program. Note that basic certificate chain validation (signatures, dates, ...) is not affected, the denial of service can occur only when the application also specifies an expected DNS name, Email address or IP address. TLS servers rarely solicit client certificates, and even when they do, they generally don't perform a name check against a reference identifier (expected identity), but rather extract th",
      "vulnerability_id": "CVE-2024-6119",
      "name": "CVE-2024-6119",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2024/CVE-2024-6119.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2024-6119 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "The function PEM_read_bio_ex() reads a PEM file from a BIO and parses and decodes the \"name\" (e.g. \"CERTIFICATE\"), any header data and the payload data. If the function succeeds then the \"name_out\", \"header\" and \"data\" arguments are populated with pointers to buffers containing the relevant decoded data. The caller is responsible for freeing those buffers. It is possible to construct a PEM file that results in 0 bytes of payload data. In this case PEM_read_bio_ex() will return a failure code but will populate the header argument with a pointer to a buffer that has already been freed. If the caller also frees this buffer then a double free will occur. This will most likely lead to a crash. This could be exploited by an attacker who has the ability to supply malicious PEM files for parsing to achieve a denial of service attack. The functions PEM_read_bio() and PEM_read() are simple wrappers around PEM_read_bio_ex() and therefore these functions are also directly affected. These functions are also called indirec",
      "vulnerability_id": "CVE-2022-4450",
      "name": "CVE-2022-4450",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-4450.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-4450 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "There is a type confusion vulnerability relating to X.400 address processing inside an X.509 GeneralName. X.400 addresses were parsed as an ASN1_STRING but the public structure definition for GENERAL_NAME incorrectly specified the type of the x400Address field as ASN1_TYPE. This field is subsequently interpreted by the OpenSSL function GENERAL_NAME_cmp as an ASN1_TYPE rather than an ASN1_STRING. When CRL checking is enabled (i.e. the application sets the X509_V_FLAG_CRL_CHECK flag), this vulnerability may allow an attacker to pass arbitrary pointers to a memcmp call, enabling them to read memory contents or enact a denial of service. In most cases, the attack requires the attacker to provide both the certificate chain and CRL, neither of which need to have a valid signature. If the attacker only controls one of these inputs, the other input must already contain an X.400 address as a CRL distribution point, which is uncommon. As such, this vulnerability is most likely to only affect applications which have imp",
      "vulnerability_id": "CVE-2023-0286",
      "name": "CVE-2023-0286",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.4,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.4,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-0286.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-0286 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "It was discovered that OpenSSL failed to choose an appropriately short private key size when computing shared-secrets in the Diffie-Hellman Key Agreement Protocol. A remote attacker could possibly use this issue to cause OpenSSL to consume resources, resulting in a denial of service.",
      "vulnerability_id": "CVE-2022-40735",
      "name": "CVE-2022-40735",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-40735.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-40735 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "An invalid pointer dereference on read can be triggered when an application tries to check a malformed DSA public key by the EVP_PKEY_public_check() function. This will most likely lead to an application crash. This function can be called on public keys supplied from untrusted sources which could allow an attacker to cause a denial of service attack. The TLS implementation in OpenSSL does not call this function but applications might call the function if there are additional security requirements imposed by standards such as FIPS 140-3.",
      "vulnerability_id": "CVE-2023-0217",
      "name": "CVE-2023-0217",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2023/CVE-2023-0217.html",
      "source": "UBUNTU_CVE",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-0217 - openssl",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "In addition to the c_rehash shell command injection identified in CVE-2022-1292, further circumstances where the c_rehash script does not properly sanitise shell metacharacters to prevent command injection were found by code review. When the CVE-2022-1292 was fixed it was not discovered that there are other places in the script where the file names of certificates being hashed were possibly passed to a command executed through the shell. This script is distributed by some operating systems in a manner where it is automatically executed. On such operating systems, an attacker could execute arbitrary commands with the privileges of the script. Use of the c_rehash script is considered obsolete and should be replaced by the OpenSSL rehash command line tool. Fixed in OpenSSL 3.0.4 (Affected 3.0.0,3.0.1,3.0.2,3.0.3). Fixed in OpenSSL 1.1.1p (Affected 1.1.1-1.1.1o). Fixed in OpenSSL 1.0.2zf (Affected 1.0.2-1.0.2ze).",
      "vulnerability_id": "CVE-2022-2068",
      "name": "CVE-2022-2068",
      "package_name": "openssl",
      "package_details": {
        "file_path": null,
        "name": "openssl",
        "package_manager": "OS",
        "version": "1.1.1",
        "release": "1ubuntu2.1~18.04.23"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 9.8,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 9.8,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "CRITICAL",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-2068.html",
      "source": "UBUNTU_CVE",
      "severity": "CRITICAL",
      "status": "ACTIVE",
      "title": "CVE-2022-2068 - openssl",
      "reason_to_ignore": "N/A"
    }
  ]
}
