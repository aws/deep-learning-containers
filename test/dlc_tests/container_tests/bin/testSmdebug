#!/bin/bash

if [ $# -lt 1 ]; then
    echo "Not enough args"
    echo "Use as: $0 <framework>, where framework is one of (mxnet, pytorch, tensorflow)"
    exit 1
fi

FRAMEWORK=$1

# declare -A only works with bash 4 and above, and creates an "associate array" in bash
declare -A ZCC_TEST_NAME=( ["mxnet"]="mxnet_gluon_integration_test.py" \
                           ["pytorch"]="pytorch_integration_tests.py" \
                           ["tensorflow"]="tensorflow_integration_tests.py" )

HOME_DIR=/test
BIN_DIR=${HOME_DIR}/bin
LOG_DIR=${HOME_DIR}/logs

# Assuming that if a version is released to pypi, it will have a corresponding release tag on GitHub.
# Not using master because there could be breaking changes in tests between versions.
SMDEBUG_RELEASE_TAG=$(python -c "import smdebug; print(smdebug.__version__)")

echo "Simply verify if smdebug is installed correctly."
set -x
echo "Cloning git repo for release tag $SMDEBUG_RELEASE_TAG"
git clone -b ${SMDEBUG_RELEASE_TAG} https://github.com/awslabs/sagemaker-debugger.git sagemaker-debugger || exit 1

echo "Changing to sagemaker-debugger."
cd sagemaker-debugger

echo "Creating mock test folder."
mkdir -p mock
cp -r tests mock/

echo "Installing pre-requisites."
pip install pytest

echo "Running framework tests."
pytest mock/tests/${FRAMEWORK} --ignore=mock/tests/mxnet/test_training_end.py  2>&1 

if [ "$?" -eq "0" ]
then
    echo "SMDebug framework tests succeeded."
else
    echo "SMDebug framework tests Failed."
    exit 1
fi

echo "Setting up SMDebug environment."
echo "{\"LocalPath\": \"newlogsRunTest1/test_hook_from_json_config\"}" > /tmp/test_hook_from_json_config.json
export SMDEBUG_CONFIG_FILE_PATH=/tmp/test_hook_from_json_config.json

if [ ! ${ZCC_TEST_NAME[$FRAMEWORK]} ]; then
    echo "$FRAMEWORK is not a valid entry in list of frameworks"
    exit 1
fi

echo "Running ZCC tests."
timeout 360s python mock/tests/zero_code_change/${ZCC_TEST_NAME[$FRAMEWORK]} 2>&1

if [ "$?" -eq "0" ]
then
    echo "SMDebug framework tests succeeded."
else
    echo "SMDebug framework tests Failed."
    exit 1
fi

exit 0
