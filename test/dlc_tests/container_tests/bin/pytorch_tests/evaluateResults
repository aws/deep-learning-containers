#!/bin/bash

set -e

printf '\nevaluating the performance results in $0 and $1'
echo "==============================================="

# check if the tests have failed
has_anomaly=0 # to be used in evaluateResults
if grep -qi "error" $1 || grep -qi "error" $2 ; then
    echo "some processes failed"
    has_anomaly=1
fi

# evaluate the performance
for i in {2..10}
do
    aws_lat=$(cat $1 | awk -v line=$i -F',' 'NR==line {print $NF}')
    oss_lat=$(cat $2 | awk -v line=$i -F',' 'NR==line {print $NF}')
    
    if [ -z "$aws_lat" ] && [ -z "$oss_lat" ]; then
        echo "results end at line $i, exiting"
        exit 0
    fi

    echo "--- METRIC TYPE $i: ---"
    echo "aws metric: "$aws_lat
    echo "oss metric: "$oss_lat
    
    # check if AWS-PyTorch deviates from OSS PyTorch by 10%
    if awk -v aws_lat="$aws_lat" -v oss_lat="$oss_lat" 'BEGIN {exit !(aws_lat > (oss_lat * 1.1))}'; then
        echo "aws metric is 10% greater than oss"  
        has_anomaly=1
    elif awk -v aws_lat="$aws_lat" -v oss_lat="$oss_lat" 'BEGIN {exit !(aws_lat < (oss_lat * 0.9))}'; then
        echo "aws metric is 10% less than oss"
        has_anomaly=1
    fi
done

if [ "$has_anomaly" -eq 1 ]; then
    echo "encountered runtime error or performance anomaly"
    exit 1
fi
