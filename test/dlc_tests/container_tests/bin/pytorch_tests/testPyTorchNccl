#!/bin/bash

set -e

source /test/bin/pytorch_tests/setupPyTorchBackendTest

# run NCCL benchmarking with 2 GPUS and 1 local node (resnet will use torchvision)
python userbenchmark/ddp_experiments/__init__.py \
    --ngpus 4 \
    --distributed ddp \
    --nodes 1 \
    --cluster local \
    --filter_models resnet50 \
    --timeout 6 \
    --job_dir $AWS_LOG_DIR \
    --nccl-socket-ifname eth0

# generate the result csv
JOB_ID=$(ls $AWS_LOG_DIR | grep .out | head -n 1 | cut -d'_' -f 1)
python userbenchmark/ddp_experiments/parse_ddp.py \
    --job_id $JOB_ID \
    --results_dir $AWS_LOG_DIR \
    --csv_out > $AWS_LOG_DIR/aws_res.csv

# get OSS perf data
bash ${BIN_DIR}/pytorch_tests/installOSSPyTorch

# run NCCL benchmarking with 2 GPUS and 1 local node (resnet will use torchvision)
python userbenchmark/ddp_experiments/__init__.py \
    --ngpus 4 \
    --distributed ddp \
    --nodes 1 \
    --cluster local \
    --filter_models resnet50 \
    --timeout 6 \
    --job_dir $OSS_LOG_DIR \
    --nccl-socket-ifname eth0

# generate the result csv
JOB_ID=$(ls $OSS_LOG_DIR | grep .out | head -n 1 | cut -d'_' -f 1)
python userbenchmark/ddp_experiments/parse_ddp.py \
    --job_id $JOB_ID \
    --results_dir $OSS_LOG_DIR \
    --csv_out > $OSS_LOG_DIR/oss_res.csv

# evaluate the performance
bash ${BIN_DIR}/pytorch_tests/evaluateResults $AWS_LOG_DIR/aws_res.csv $OSS_LOG_DIR/oss_res.csv
