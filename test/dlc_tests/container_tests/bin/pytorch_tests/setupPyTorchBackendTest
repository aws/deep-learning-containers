#!/bin/bash

set -e

# initialize directories
export HOME_DIR=/test
export BIN_DIR=${HOME_DIR}/bin
export LOG_DIR=${HOME_DIR}/logs
export AWS_LOG_DIR=$LOG_DIR/aws_log
export OSS_LOG_DIR=$LOG_DIR/oss_log
mkdir -p $AWS_LOG_DIR $OSS_LOG_DIR

# check GPU status
if nvidia-smi &> /dev/null; then
   DEVICE="cuda"
   NUM_GPUS=$(nvidia-smi -L | wc -l)
else
   DEVICE="cpu"
   NUM_GPUS=0
fi

git config --global user.email "you@example.com"
git config --global user.name "Your Name"

# # activate conda env (to prevent duplicate pip install)
# conda init
# source ~/.bashrc

# Set the name for virtual environment
VENV_NAME=".venv"

# Create a virtual environment if it doesn't exist
if [ ! -d "$VENV_NAME" ]; then
    python3 -m venv $VENV_NAME
fi

# Activate the virtual environment
source $VENV_NAME/bin/activate

# Optionally, update pip
pip install --upgrade pip

# Add this to .bashrc or .bash_profile to automatically activate the venv
echo "source $PWD/$VENV_NAME/bin/activate" >> ~/.bashrc

# Reload .bashrc to apply changes
source ~/.bashrc

# setup benchmark repo
git clone https://github.com/pytorch/benchmark.git
cd benchmark
git checkout 350bb04  # pin commit for Python 3.11 support
pip install -r requirements.txt

# pin pynvml to avoid issues with 12.0.0
# https://github.com/pytorch/benchmark/issues/2552
# PR: https://github.com/pytorch/benchmark/pull/2553
# when this issue is fixed can revert back
pip uninstall pynvml -y
pip install "pynvml<12"

pip install numba
