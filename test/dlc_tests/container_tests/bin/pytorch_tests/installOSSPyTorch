#!/bin/bash

set -e

function version { echo "$@" | awk -F. '{ printf("%d%03d%03d%03d\n", $1,$2,$3,$4); }'; }

# get version info from AWS-PyTorch
PT_VERSION=$(python -c "import torch; print(torch.__version__.split('+')[0]);")
CUDA_VERSION=$(python -c "import torch; print(torch.version.cuda.replace('.', '') if torch.version.cuda else 'None')")

# install OSS PyTorch
if [ $(version $PT_VERSION) -lt $(version "2.0") ] || [ $(version $PT_VERSION) -ge $(version "2.4") ]; then
    pip uninstall -y torch torchvision torchaudio torchdata
else
    conda remove -y --force pytorch torchvision torchaudio
fi

if [ "$CUDA_VERSION" != "None" ]; then
    echo "CUDA is available. Version: $CUDA_VERSION"
    if [ $(version $PT_VERSION) -lt $(version "2.0") ]; then
        mamba install -y -c pytorch -c nvidia pytorch=$PT_VERSION torchvision torchaudio pytorch-cuda "mkl<2024.1"
    elif [ $(version $PT_VERSION) -lt $(version "2.6") ]; then
        mamba install -y -c pytorch -c nvidia pytorch=$PT_VERSION torchvision torchaudio pytorch-cuda
    else
        pip install torch==$PT_VERSION torchvision torchaudio --index-url https://download.pytorch.org/whl/cu${CUDA_VERSION}
    fi
else
    if [ $(version $PT_VERSION) -lt $(version "2.6") ]; then
        mamba install -y -c pytorch pytorch=$PT_VERSION torchvision torchaudio cpuonly
    else
        pip install torch==$PT_VERSION torchvision torchaudio --index-url https://download.pytorch.org/whl/cpu
    fi
fi