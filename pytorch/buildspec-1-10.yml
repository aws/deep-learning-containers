account_id: &ACCOUNT_ID <set-$ACCOUNT_ID-in-environment>
region: &REGION <set-$REGION-in-environment>
framework: &FRAMEWORK pytorch
version: &VERSION 1.10.2
short_version: &SHORT_VERSION "1.10"
arch_type: x86

repository_info:
  training_repository: &TRAINING_REPOSITORY
    image_type: &TRAINING_IMAGE_TYPE training
    root: !join [ *FRAMEWORK, "/", *TRAINING_IMAGE_TYPE ]
    repository_name: &REPOSITORY_NAME !join [pr, "-", *FRAMEWORK, "-", *TRAINING_IMAGE_TYPE]
    repository: &REPOSITORY !join [ *ACCOUNT_ID, .dkr.ecr., *REGION, .amazonaws.com/, *REPOSITORY_NAME ]

context:
  training_context: &TRAINING_CONTEXT
    changehostname:
      source: docker/build_artifacts/changehostname.c
      target: changehostname.c
    start_with_right_hostname:
      source: docker/build_artifacts/start_with_right_hostname.sh
      target: start_with_right_hostname.sh
    example_mnist_file:
      source: docker/build_artifacts/mnist.py
      target: mnist.py
    deep_learning_container:
      source: ../../src/deep_learning_container.py
      target: deep_learning_container.py

images:
  BuildE3CPUPTTrainPy3DockerImage:
    <<: *TRAINING_REPOSITORY
    build: &PYTORCH_CPU_TRAINING_PY3 false
    enable_test_promotion: true
    image_size_baseline: 5000
    device_type: &DEVICE_TYPE cpu
    python_version: &DOCKER_PYTHON_VERSION py3
    tag_python_version: &TAG_PYTHON_VERSION py38
    os_version: &OS_VERSION ubuntu20.04
    tag: !join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *OS_VERSION, "-e3" ]
    docker_file: !join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /Dockerfile.e3., *DEVICE_TYPE ]
    context:
      <<: *TRAINING_CONTEXT
  BuildE3GPUPTTrainPy3DockerImage:
    <<: *TRAINING_REPOSITORY
    build: &PYTORCH_GPU_TRAINING_PY3 false
    enable_test_promotion: true
    image_size_baseline: 14000
    device_type: &DEVICE_TYPE gpu
    python_version: &DOCKER_PYTHON_VERSION py3
    tag_python_version: &TAG_PYTHON_VERSION py38
    cuda_version: &CUDA_VERSION cu113
    os_version: &OS_VERSION ubuntu20.04
    tag: !join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *CUDA_VERSION, "-", *OS_VERSION, "-e3" ]
    docker_file: !join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /, *CUDA_VERSION, /Dockerfile.e3.,
                         *DEVICE_TYPE ]
    context:
      <<: *TRAINING_CONTEXT
  BuildSageMakerCPUPTTrainPy3DockerImage:
    <<: *TRAINING_REPOSITORY
    build: &PYTORCH_CPU_TRAINING_PY3 false
    image_size_baseline: 5000
    base_image_name: BuildE3CPUPTTrainPy3DockerImage
    device_type: &DEVICE_TYPE cpu
    python_version: &DOCKER_PYTHON_VERSION py3
    tag_python_version: &TAG_PYTHON_VERSION py38
    os_version: &OS_VERSION ubuntu20.04
    tag: !join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *OS_VERSION, "-sagemaker" ]
    docker_file: !join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /Dockerfile.sagemaker., *DEVICE_TYPE ]
    context:
      <<: *TRAINING_CONTEXT
    download_artifacts:
      sm_pysdk_binary:
        type: s3
        URI: s3://sagemaker-python-sdk-822456244522/dist/sagemaker-2.96.1.dev0.tar.gz
        VAR_IN_DOCKERFILE: SM_PYSDK_BINARY
      sm_toolkit_binary:
        type: s3
        URI: s3://heterocluster/20220628065742/sagemaker_training.tar.gz
        VAR_IN_DOCKERFILE: SM_TOOLKIT_BINARY
      pt_toolkit_binary:
        type: s3
        URI: s3://heterocluster/20220628065742/sagemaker_pytorch_training.tar.gz
        VAR_IN_DOCKERFILE: PT_TOOOLKIT_BINARY
  BuildSageMakerGPUPTTrainPy3DockerImage:
    <<: *TRAINING_REPOSITORY
    build: &PYTORCH_GPU_TRAINING_PY3 false
    image_size_baseline: 14000
    base_image_name: BuildE3GPUPTTrainPy3DockerImage
    device_type: &DEVICE_TYPE gpu
    python_version: &DOCKER_PYTHON_VERSION py3
    tag_python_version: &TAG_PYTHON_VERSION py38
    cuda_version: &CUDA_VERSION cu113
    os_version: &OS_VERSION ubuntu20.04
    tag: !join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *CUDA_VERSION, "-", *OS_VERSION, "-sagemaker" ]
    docker_file: !join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /, *CUDA_VERSION, /Dockerfile.sagemaker.,
                         *DEVICE_TYPE ]
    context:
      <<: *TRAINING_CONTEXT
    download_artifacts:
      sm_pysdk_binary:
        type: s3
        URI: s3://sagemaker-python-sdk-822456244522/dist/sagemaker-2.96.1.dev0.tar.gz
        VAR_IN_DOCKERFILE: SM_PYSDK_BINARY
      sm_toolkit_binary:
        type: s3
        URI: s3://heterocluster/20220628065742/sagemaker_training.tar.gz
        VAR_IN_DOCKERFILE: SM_TOOLKIT_BINARY
      pt_toolkit_binary:
        type: s3
        URI: s3://heterocluster/20220628065742/sagemaker_pytorch_training.tar.gz
        VAR_IN_DOCKERFILE: PT_TOOOLKIT_BINARY
