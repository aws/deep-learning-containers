{
  "golang.org/x/net": [
    {
      "description": "A request smuggling attack is possible when using MaxBytesHandler. When using MaxBytesHandler, the body of an HTTP request is not fully consumed. When the server attempts to read HTTP2 frames from the connection, it will instead be reading the body of the HTTP request, which could be attacker-manipulated to represent arbitrary HTTP2 requests.",
      "vulnerability_id": "CVE-2022-41721",
      "name": "CVE-2022-41721",
      "package_name": "golang.org/x/net",
      "package_details": {
        "file_path": "/opt/nvidia/nsight-systems/2023.4.4/host-linux-x64/Scripts/WebRTCContainer/setup/neko/server/bin/neko",
        "name": "golang.org/x/net",
        "package_manager": "GO",
        "version": "v0.1.0",
        "release": null
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41721",
      "source": "NVD",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-41721 - golang.org/x/net",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "A maliciously crafted HTTP/2 stream could cause excessive CPU consumption in the HPACK decoder, sufficient to cause a denial of service from a small number of small requests.",
      "vulnerability_id": "CVE-2022-41723",
      "name": "CVE-2022-41723",
      "package_name": "golang.org/x/net",
      "package_details": {
        "file_path": "/opt/nvidia/nsight-systems/2023.4.4/host-linux-x64/Scripts/WebRTCContainer/setup/neko/server/bin/neko",
        "name": "golang.org/x/net",
        "package_manager": "GO",
        "version": "v0.1.0",
        "release": null
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://nvd.nist.gov/vuln/detail/CVE-2022-41723",
      "source": "NVD",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2022-41723 - golang.org/x/net",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "The HTTP/2 protocol allows a denial of service (server resource consumption) because request cancellation can reset many streams quickly, as exploited in the wild in August through October 2023.",
      "vulnerability_id": "CVE-2023-44487",
      "name": "CVE-2023-44487",
      "package_name": "golang.org/x/net",
      "package_details": {
        "file_path": "/opt/nvidia/nsight-systems/2023.4.4/host-linux-x64/Scripts/WebRTCContainer/setup/neko/server/bin/neko",
        "name": "golang.org/x/net",
        "package_manager": "GO",
        "version": "v0.1.0",
        "release": null
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://nvd.nist.gov/vuln/detail/CVE-2023-44487",
      "source": "NVD",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-44487 - golang.org/x/net",
      "reason_to_ignore": "N/A"
    },
    {
      "description": "A malicious HTTP/2 client which rapidly creates requests and immediately resets them can cause excessive server resource consumption. While the total number of requests is bounded by the http2.Server.MaxConcurrentStreams setting, resetting an in-progress request allows the attacker to create a new request while the existing one is still executing. With the fix applied, HTTP/2 servers now bound the number of simultaneously executing handler goroutines to the stream concurrency limit (MaxConcurrentStreams). New requests arriving when at the limit (which can only happen after the client has reset an existing, in-flight request) will be queued until a handler exits. If the request queue grows too large, the server will terminate the connection. This issue is also fixed in golang.org/x/net/http2 for users manually configuring HTTP/2. The default stream concurrency limit is 250 streams (requests) per HTTP/2 connection. This value may be adjusted using the golang.org/x/net/http2 package; see the Server.MaxConcurrent",
      "vulnerability_id": "CVE-2023-39325",
      "name": "CVE-2023-39325",
      "package_name": "golang.org/x/net",
      "package_details": {
        "file_path": "/opt/nvidia/nsight-systems/2023.4.4/host-linux-x64/Scripts/WebRTCContainer/setup/neko/server/bin/neko",
        "name": "golang.org/x/net",
        "package_manager": "GO",
        "version": "v0.1.0",
        "release": null
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://nvd.nist.gov/vuln/detail/CVE-2023-39325",
      "source": "NVD",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2023-39325 - golang.org/x/net",
      "reason_to_ignore": "N/A"
    }
  ],
  "org.apache.ant:ant": [
    {
      "description": "As mitigation for CVE-2020-1945 Apache Ant 1.10.8 changed the permissions of temporary files it created so that only the current user was allowed to access them. Unfortunately the fixcrlf task deleted the temporary file and created a new one without said protection, effectively nullifying the effort. This would still allow an attacker to inject modified source files into the build process.",
      "vulnerability_id": "CVE-2020-11979",
      "name": "CVE-2020-11979",
      "package_name": "org.apache.ant:ant",
      "package_details": {
        "file_path": "/usr/local/cuda-12.4/libnvvp/plugins/org.apache.ant_1.9.2.v201404171502/lib/ant.jar",
        "name": "org.apache.ant:ant",
        "package_manager": "JAVA",
        "version": "1.9.2",
        "release": null
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://nvd.nist.gov/vuln/detail/CVE-2020-11979",
      "source": "NVD",
      "severity": "HIGH",
      "status": "ACTIVE",
      "title": "CVE-2020-11979 - org.apache.ant:ant",
      "reason_to_ignore": "N/A"
    }
  ]
}
