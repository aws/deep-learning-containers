{
  "cryptography": [
    {
      "reason_to_ignore": "low severity",
      "description": " If an X.509 certificate contains a malformed policy constraint and policy processing is enabled, then a write lock will be taken twice recursively. On some operating systems (most widely: Windows) this results in a denial of service when the affected process hangs. Policy processing being enabled on a publicly facing server is not considered to be a common setup. Policy processing is enabled by passing the `-policy' argument to the command line utilities or by calling either `X509_VERIFY_PARAM_add0_policy()' or `X509_VERIFY_PARAM_set1_policies()' functions.",
      "vulnerability_id": "CVE-2022-3996",
      "name": "CVE-2022-3996",
      "package_name": "cryptography",
      "package_details": {
        "file_path": "opt/conda/lib/python3.8/site-packages/cryptography-39.0.0.dist-info/METADATA",
        "name": "cryptography",
        "package_manager": "PYTHONPKG",
        "version": "39.0.0",
        "release": null
      },
      "remediation": {
        "recommendation": {
          "text": "None Provided"
        }
      },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-3996.html",
      "source": "UBUNTU_CVE",
      "severity": "LOW",
      "status": "ACTIVE",
      "title": "CVE-2022-3996 - cryptography"
    }
  ],
  "torch": [
    {
      "reason_to_ignore": "The binaries are patched for this CVE, but the system checks version and not code.",
      "description": "[torch](https://pypi.org/project/torch) is a Tensors and Dynamic neural networks in Python with strong GPU acceleration\n\nAffected versions of this package are vulnerable to Command Injection in `torch.jit.annotations.parse_type_line` which can cause arbitrary code execution because `eval` is used unsafely.",
      "vulnerability_id": "SNYK-PYTHON-TORCH-3149871",
      "name": "SNYK-PYTHON-TORCH-3149871",
      "package_name": "torch",
      "package_details": {
        "file_path": "opt/conda/lib/python3.8/site-packages/torch-1.11.0+cpu.dist-info/METADATA",
        "name": "torch",
        "package_manager": "PYTHONPKG",
        "version": "1.11.0+cpu",
        "release": null
      },
      "remediation": {
        "recommendation": {
          "text": "None Provided"
        }
      },
      "cvss_v3_score": 9.8,
      "cvss_v30_score": 0,
      "cvss_v31_score": 9.8,
      "cvss_v2_score": 0,
      "cvss_v3_severity": "CRITICAL",
      "source_url": "https://snyk.io/vuln/SNYK-PYTHON-TORCH-3149871",
      "source": "SNYK",
      "severity": "CRITICAL",
      "status": "ACTIVE",
      "title": "IN1-PYTHON-TORCH-3149871 - torch"
    },
    {
      "reason_to_ignore": "The binaries are patched for this CVE, but the system checks version and not code.",
      "description": " In PyTorch before trunk/89695, torch.jit.annotations.parse_type_line can cause arbitrary code execution because eval is used unsafely.",
      "vulnerability_id": "CVE-2022-45907",
      "name": "CVE-2022-45907",
      "package_name": "torch",
      "package_details": {
        "file_path": "opt/conda/lib/python3.8/site-packages/torch-1.11.0+cpu.dist-info/METADATA",
        "name": "torch",
        "package_manager": "PYTHONPKG",
        "version": "1.11.0+cpu",
        "release": null
      },
      "remediation": {
        "recommendation": {
          "text": "None Provided"
        }
      },
      "cvss_v3_score": 9.8,
      "cvss_v30_score": 0,
      "cvss_v31_score": 9.8,
      "cvss_v2_score": 0,
      "cvss_v3_severity": "CRITICAL",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-45907.html",
      "source": "UBUNTU_CVE",
      "severity": "MEDIUM",
      "status": "ACTIVE",
      "title": "CVE-2022-45907 - torch"
    }
  ],
  "curl": [
    {
      "reason_to_ignore": "focal is not vulnerable",
      "description": " A vulnerability exists in curl <7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
      "vulnerability_id": "CVE-2022-43551",
      "name": "CVE-2022-43551",
      "package_name": "curl",
      "package_details": {
        "file_path": null,
        "name": "curl",
        "package_manager": "OS",
        "version": "7.68.0",
        "release": "1ubuntu2.14"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-43551.html",
      "source": "UBUNTU_CVE",
      "severity": "MEDIUM",
      "status": "ACTIVE",
      "title": "CVE-2022-43551 - libcurl4, curl and 1 more"
    }
  ],
  "libcurl3-gnutls": [
    {
      "reason_to_ignore": "focal is not vulnerable",
      "description": " A vulnerability exists in curl <7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
      "vulnerability_id": "CVE-2022-43551",
      "name": "CVE-2022-43551",
      "package_name": "libcurl3-gnutls",
      "package_details": {
        "file_path": null,
        "name": "libcurl3-gnutls",
        "package_manager": "OS",
        "version": "7.68.0",
        "release": "1ubuntu2.14"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-43551.html",
      "source": "UBUNTU_CVE",
      "severity": "MEDIUM",
      "status": "ACTIVE",
      "title": "CVE-2022-43551 - libcurl4, curl and 1 more"
    }
  ],
  "libcurl4": [
    {
      "reason_to_ignore": "focal is not vulnerable",
      "description": " A vulnerability exists in curl <7.87.0 HSTS check that could be bypassed to trick it to keep using HTTP. Using its HSTS support, curl can be instructed to use HTTPS instead of using an insecure clear-text HTTP step even when HTTP is provided in the URL. However, the HSTS mechanism could be bypassed if the host name in the given URL first uses IDN characters that get replaced to ASCII counterparts as part of the IDN conversion. Like using the character UTF-8 U+3002 (IDEOGRAPHIC FULL STOP) instead of the common ASCII full stop (U+002E) `.`. Then in a subsequent request, it does not detect the HSTS state and makes a clear text transfer. Because it would store the info IDN encoded but look for it IDN decoded.",
      "vulnerability_id": "CVE-2022-43551",
      "name": "CVE-2022-43551",
      "package_name": "libcurl4",
      "package_details": {
        "file_path": null,
        "name": "libcurl4",
        "package_manager": "OS",
        "version": "7.68.0",
        "release": "1ubuntu2.14"
      },
      "remediation": { "recommendation": { "text": "None Provided" } },
      "cvss_v3_score": 7.5,
      "cvss_v30_score": 0.0,
      "cvss_v31_score": 7.5,
      "cvss_v2_score": 0.0,
      "cvss_v3_severity": "HIGH",
      "source_url": "https://people.canonical.com/~ubuntu-security/cve/2022/CVE-2022-43551.html",
      "source": "UBUNTU_CVE",
      "severity": "MEDIUM",
      "status": "ACTIVE",
      "title": "CVE-2022-43551 - libcurl4, curl and 1 more"
    }
  ]
}
