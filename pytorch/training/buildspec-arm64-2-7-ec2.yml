account_id: &ACCOUNT_ID <set-$ACCOUNT_ID-in-environment>
prod_account_id: &PROD_ACCOUNT_ID 763104351884
region: &REGION <set-$REGION-in-environment>
framework: &FRAMEWORK pytorch
version: &VERSION 2.7.0
short_version: &SHORT_VERSION "2.7"
arch_type: arm64
# autopatch_build: "True"

repository_info:
  training_repository: &TRAINING_REPOSITORY
    image_type: &TRAINING_IMAGE_TYPE training
    root: !join [ *FRAMEWORK, "/", *TRAINING_IMAGE_TYPE ]
    repository_name: &REPOSITORY_NAME !join [ pr, "-", *FRAMEWORK, "-", *TRAINING_IMAGE_TYPE, "-", arm64 ]
    repository: &REPOSITORY !join [ *ACCOUNT_ID, .dkr.ecr., *REGION, .amazonaws.com/, *REPOSITORY_NAME ]
    release_repository_name: &RELEASE_REPOSITORY_NAME !join [ *FRAMEWORK, "-", *TRAINING_IMAGE_TYPE, "-", arm64 ]
    release_repository: &RELEASE_REPOSITORY !join [ *PROD_ACCOUNT_ID, .dkr.ecr., *REGION, .amazonaws.com/, *RELEASE_REPOSITORY_NAME ]

context:
  training_context: &TRAINING_CONTEXT
    start_cuda_compat:
      source: docker/build_artifacts/start_cuda_compat.sh
      target: start_cuda_compat.sh
    dockerd_entrypoint:
      source: docker/build_artifacts/dockerd_entrypoint.sh
      target: dockerd_entrypoint.sh
    changehostname:
      source: docker/build_artifacts/changehostname.c
      target: changehostname.c
    start_with_right_hostname:
      source: docker/build_artifacts/start_with_right_hostname.sh
      target: start_with_right_hostname.sh
    example_mnist_file:
      source: docker/build_artifacts/mnist.py
      target: mnist.py
    deep_learning_container:
      source: ../../src/deep_learning_container.py
      target: deep_learning_container.py

images:
  BuildEC2Arm64GPUPTTrainPy3cu128DockerImage:
    <<: *TRAINING_REPOSITORY
    build: &PYTORCH_GPU_TRAINING_PY3 false
    image_size_baseline: 19700
    device_type: &DEVICE_TYPE gpu
    python_version: &DOCKER_PYTHON_VERSION py3
    tag_python_version: &TAG_PYTHON_VERSION py312
    cuda_version: &CUDA_VERSION cu128
    os_version: &OS_VERSION ubuntu22.04
    tag: !join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *CUDA_VERSION, "-", *OS_VERSION, "-ec2" ]
    latest_release_tag: !join [ *VERSION, "-", *DEVICE_TYPE, "-", *TAG_PYTHON_VERSION, "-", *CUDA_VERSION, "-", *OS_VERSION, "-ec2" ]
    # build_tag_override: "True"
    docker_file: !join [ docker/, *SHORT_VERSION, /, *DOCKER_PYTHON_VERSION, /, *CUDA_VERSION, /Dockerfile.arm64.,
                         *DEVICE_TYPE ]
    target: ec2
    context:
      <<: *TRAINING_CONTEXT
