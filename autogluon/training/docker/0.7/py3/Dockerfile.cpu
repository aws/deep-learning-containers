ARG PYTHON_VERSION=3.9.16

FROM 763104351884.dkr.ecr.us-west-2.amazonaws.com/pytorch-training:1.13.1-cpu-py39-ubuntu20.04-sagemaker

# PYTORCH_SKIP_CUDNN_COMPATIBILITY_CHECK - see https://github.com/autogluon/autogluon/issues/2534
ENV PYTORCH_SKIP_CUDNN_COMPATIBILITY_CHECK=1

LABEL maintainer="Amazon AI"
LABEL dlc_major_version="1"

# Install dependencies
RUN apt-get update \
 && apt-get -y upgrade \
 && apt-get install -y --no-install-recommends \
 && apt-get autoremove -y \
 # Install tesseract-ocr to support automm document classification
 && apt-get install tesseract-ocr -y \
 # Install rsync to support ray distributed training
 && apt-get install rsync -y \
 && apt-get clean \
 && rm -rf /var/lib/apt/lists/*

ARG AUTOGLUON_VERSION=0.7.0

# NOTE: reinstalling horovod with pytorch support because it is available in the container
# Need to install Werkzeug>2.2.2 to address security vulnerability SNYK-PYTHON-WERKZEUG-3319936
# downgrade protobuf, importlib-metada, yapf to fix pip version conflict
# upgrade requests, cryptography, tornado for vulnerabilities in base image
# uninstall tensorboardx to resolve conflict for protobuf
RUN pip install --no-cache-dir -U --trusted-host pypi.org --trusted-host files.pythonhosted.org pip \
 && pip install --no-cache-dir -U setuptools wheel \
 && pip install --no-cache-dir -U numpy numba \
 && pip install --no-cache-dir -U autogluon==${AUTOGLUON_VERSION} \
 && mim install -q mmcv-full \
 && pip install --no-cache-dir -U mmdet \
 && pip uninstall -y tensorboardX \
 && pip install --no-cache-dir -U "protobuf<4.0" \
 && pip install --no-cache-dir -U Werkzeug \
 && pip install --no-cache-dir -U "yapf<0.40.0" \
 && pip install --no-cache-dir -U "importlib-metadata<5.0" \
 && pip install --no-cache-dir -U requests>=2.31.0 \
 && pip install --no-cache-dir -U pyOpenSSL>=23.2.0 \
 && pip install --no-cache-dir -U cryptography>=41.0.2 \
 && pip install --no-cache-dir -U tornado>=6.3.2

# Removing GluonTS nursery/tsbench package - it is not used in training/inference and have security vulnerabilities
RUN rm -rf /usr/local/lib/python3.9/dist-packages/gluonts/nursery/tsbench \
 && rm -rf /opt/conda/lib/python3.9/dist-packages/gluonts/nursery/tsbench

# Remove these JAR files to address security issues; these are not used if only python package is used
RUN rm -rf /usr/local/lib/python3.9/dist-packages/ray/jars \
 && rm -rf /opt/conda/lib/python3.9/site-packages/ray/jars

# Removing cryptography from micromamba version of cryptography which is not used to address security vulnerabilities
RUN rm -rf /root/micromamba/pkgs/cryptography-39.0.0-py310h34c0648_0/lib/python3.10/site-packages/

RUN HOME_DIR=/root \
 && curl -o ${HOME_DIR}/oss_compliance.zip https://aws-dlinfra-utilities.s3.amazonaws.com/oss_compliance.zip \
 && unzip ${HOME_DIR}/oss_compliance.zip -d ${HOME_DIR}/ \
 && cp ${HOME_DIR}/oss_compliance/test/testOSSCompliance /usr/local/bin/testOSSCompliance \
 && chmod +x /usr/local/bin/testOSSCompliance \
 && chmod +x ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh \
 && ${HOME_DIR}/oss_compliance/generate_oss_compliance.sh ${HOME_DIR} python \
 && rm -rf ${HOME_DIR}/oss_compliance*

RUN curl -o /licenses-autogluon.txt https://autogluon.s3.us-west-2.amazonaws.com/licenses/THIRD-PARTY-LICENSES.txt

CMD ["/bin/bash"]
